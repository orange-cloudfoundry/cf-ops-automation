---
resource_types:
  - name: concourse-pipeline
    type: docker-image
    source:
      repository: concourse/concourse-pipeline-resource
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
resources:
- name: failure-alert
  type: slack-notification
  source:
    url: ((slack-webhook))
- name: fe-int-micro-for-micro-depls
  type: concourse-pipeline
  source:
    target: ((concourse-hello-world-root-depls-target))
    insecure: ((concourse-hello-world-root-depls-insecure))
    teams:
    - name: main
      username: ((concourse-hello-world-root-depls-username))
      password: ((concourse-hello-world-root-depls-password))
- name: secrets-full
  type: git
  source:
    uri: ((secrets-uri))
    branch: ((secrets-branch))
    skip_ssl_verification: true
- name: paas-templates-full
  type: git
  source:
    uri: ((paas-templates-uri))
    branch: ((paas-templates-branch))
    skip_ssl_verification: true
- name: cf-ops-automation
  type: git
  source:
    uri: ((cf-ops-automation-uri))
    branch: ((cf-ops-automation-branch))
    tag_filter: ((cf-ops-automation-tag-filter))
    skip_ssl_verification: true
jobs:
- name: update-pipeline-hello-world-root-depls
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      icon_url: https://pbs.twimg.com/profile_images/714899641628753920/3C8UrVPf.jpg
      text: |
        ![failed](https://rawgit.com/orange-cloudfoundry/travis-resource/master/ci/images/concourse-red.png) Failed to deploy [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      username: Concourse
  plan:
  - aggregate:
    - get: paas-templates-full
      params: { submodules: none}
      attempts: 2
      trigger: false
    - get: secrets-full
      params: { submodules: none}
      attempts: 2
      trigger: false
    - get: cf-ops-automation
      params: { submodules: none}
      attempts: 2
      trigger: false
  - task: generate-hello-world-root-depls-pipelines
    input_mapping: {scripts-resource: cf-ops-automation,templates: paas-templates-full,secrets: secrets-full}
    output_mapping: {result-dir: concourse-hello-world-root-depls-pipeline}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ruby, tag: 2.3.1-slim}
      inputs:
        - name: scripts-resource
        - name: secrets
        - name: templates
      outputs:
        - name: result-dir
      run:
        path: sh
        args:
        - -exc
        - |
          cp -r templates/. result-dir
          cp -r scripts-resource/. result-dir
          cp -rf secrets/. result-dir
          cd result-dir/
          ./scripts/generate-depls.rb --depls hello-world-root-depls -t ../templates -p . -o concourse
  - put: fe-int-micro-for-micro-depls
    params:
      pipelines:
      - name: bosh-sample-generated
        team: main
        config_file: concourse-hello-world-root-depls-pipeline/concourse/pipelines/bosh-sample-generated.yml
        vars_files:
        # trick to manage <depls>-versions.yml (not included in secrets)
        - paas-templates-full/hello-world-root-depls/hello-world-root-depls-versions.yml
        # trick to manage <depls>-versions.yml (not included in secrets)
        - secrets-full/shared/concourse-credentials.yml
      - name: bosh-sample-cf-apps-generated
        team: main
        config_file: concourse-hello-world-root-depls-pipeline/concourse/pipelines/bosh-sample-cf-apps-generated.yml
        vars_files:
        # trick to manage <depls>-versions.yml (not included in secrets)
        - paas-templates-full/hello-world-root-depls/hello-world-root-depls-versions.yml
        # trick to manage <depls>-versions.yml (not included in secrets)
        - secrets-full/shared/concourse-credentials.yml
