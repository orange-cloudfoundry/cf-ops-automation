
---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: ((docker-registry-url))cfcommunity/slack-notification-resource
      tag: v1.4.2
  - name: cron-resource
    type: docker-image
    source:
      repository: ((docker-registry-url))cftoolsmiths/cron-resource
      # use latest as no other recent tag available
resources:
- name: weekday-morning
  type: cron-resource
  source:
    expression: 40 8 * * 1-5
    location: "Europe/Paris"
    fire_immediately: true
- name: failure-alert
  type: slack-notification
  source:
    url: ((slack-webhook))
    proxy: ((slack-proxy))
    proxy_https_tunnel: ((slack-proxy-https-tunnel))
    disable: ((slack-disable))
- name: cf-ops-automation
  type: git
  source:
    uri: ((cf-ops-automation-uri))
    branch: ((cf-ops-automation-branch))
    tag_filter: ((cf-ops-automation-tag-filter))
    skip_ssl_verification: true
- name: ntp
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/ntp-release
- name: ntp-s3
  type: s3
  source:
    bucket: ((s3-br-bucket))
    region_name: ((s3-br-region-name))
    regexp: cloudfoundry-community/ntp-(.*).tgz
    access_key_id: ((s3-br-access-key-id))
    secret_access_key: ((s3-br-secret-key))
    endpoint: ((s3-br-endpoint))
    skip_ssl_verification: ((s3-br-skip-ssl-verification))
- name: vault
  type: github-release
  source:
    user: cloudfoundry-community
    repository: vault-boshrelease
    access_token: ((bot-github-access-token))
- name: vault-s3
  type: s3
  source:
    bucket: ((s3-br-bucket))
    region_name: ((s3-br-region-name))
    regexp: cloudfoundry-community/vault-(.*).tgz
    access_key_id: ((s3-br-access-key-id))
    secret_access_key: ((s3-br-secret-key))
    endpoint: ((s3-br-endpoint))
    skip_ssl_verification: ((s3-br-skip-ssl-verification))
jobs:
- name: init-concourse-boshrelease-for-hello-world-root-depls
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
  - in_parallel:
    - get: cf-ops-automation
      params: { submodules: none}
      attempts: 2
    - get: weekday-morning
      trigger: true
  - task: generate-hello-world-root-depls-flight-plan
    output_mapping: {result-dir: init-hello-world-root-depls-plan}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-registry-url))concourse/busyboxplus
          tag: "git"
      outputs:
        - name: result-dir
      run:
        path: sh
        args:
        - -exc
        - |
          echo "check-resource -r $BUILD_PIPELINE_NAME/ntp --from version:((ntp-version))" >> result-dir/flight-plan
          echo "check-resource -r $BUILD_PIPELINE_NAME/vault --from tag:((vault-version))" >> result-dir/flight-plan
      params:
        BUILD_PIPELINE_NAME: hello-world-root-depls-s3-br-upload-generated
  - task: fly-into-concourse
    input_mapping: {fly-cmd: init-hello-world-root-depls-plan}
    output_mapping: {flight-report: concourse-hello-world-root-depls-init-report}
    file: cf-ops-automation/concourse/tasks/fly_execute_commands.yml
    params:
      ATC_EXTERNAL_URL: ((concourse-hello-world-root-depls-target))
      FLY_USERNAME: ((concourse-hello-world-root-depls-username))
      FLY_PASSWORD: "((concourse-hello-world-root-depls-password))"
      FLY_TEAM: upload
- name: retrigger-all-uploads
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
  - in_parallel:
    - get: cf-ops-automation
      params: { submodules: none}
  - task: generate-hello-world-root-depls-pipeline
    output_mapping: {result-dir: trigger-hello-world-root-depls-plan}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-registry-url))concourse/busyboxplus
          tag: "git"
      outputs:
        - name: result-dir
      run:
        path: sh
        args:
        - -exc
        - |
          echo "trigger-job -j $BUILD_PIPELINE_NAME/upload-current-ntp" >> result-dir/flight-plan
          echo "trigger-job -j $BUILD_PIPELINE_NAME/upload-current-vault" >> result-dir/flight-plan
      params:
        BUILD_PIPELINE_NAME: hello-world-root-depls-s3-br-upload-generated
  - task: fly-into-concourse
    input_mapping: {fly-cmd: trigger-hello-world-root-depls-plan}
    output_mapping: {flight-report: concourse-hello-world-root-depls-trigger-report}
    file: cf-ops-automation/concourse/tasks/fly_execute_commands.yml
    params:
      ATC_EXTERNAL_URL: ((concourse-hello-world-root-depls-target))
      FLY_USERNAME: ((concourse-hello-world-root-depls-username))
      FLY_PASSWORD: ((concourse-hello-world-root-depls-password))
      FLY_TEAM: upload
- name: upload-current-ntp
  serial_groups: [ntp,concurrent-group-0]
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - in_parallel:
      - get: ntp
        attempts: 2
        version: { version: "((ntp-version))" }
        trigger: true
        params: {tarball: true}
      - get: cf-ops-automation
        params: { submodules: none}
        attempts: 2
        passed: [ init-concourse-boshrelease-for-hello-world-root-depls ]
    - task: generate-ntp-name
      input_mapping: {release: ntp}
      output_mapping: {result-dir: ntp}
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((docker-registry-url))concourse/busyboxplus
            tag: "git"
        inputs:
          - name: release
        outputs:
          - name: result-dir
        run:
          path: sh
          args:
          - -exc
          - |
            VERSION=$(cat release/version)
            cp release/release.tgz result-dir/${RELEASE_PREFIX}-${VERSION}.tgz
        params:
          RELEASE_PREFIX: ntp
          TARGET_VERSION: ((ntp-version))
    - put: ntp-s3
      params:
        file: ntp/*.tgz
        acl: public-read
- name: upload-latest-ntp
  serial_groups: [ntp,concurrent-group-0]
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - in_parallel:
      - get: ntp
        attempts: 2
        version: every
        trigger: true
        params: {tarball: true}
      - get: cf-ops-automation
        params: { submodules: none}
        attempts: 2
        passed: [ upload-current-ntp ]
    - task: generate-ntp-name
      input_mapping: {release: ntp}
      output_mapping: {result-dir: ntp}
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((docker-registry-url))concourse/busyboxplus
            tag: "git"
        inputs:
          - name: release
        outputs:
          - name: result-dir
        run:
          path: sh
          args:
          - -exc
          - |
            VERSION=$(cat release/version)
            cp release/release.tgz result-dir/${RELEASE_PREFIX}-${VERSION}.tgz
        params:
          RELEASE_PREFIX: ntp
          TARGET_VERSION: ((ntp-version))
    - put: ntp-s3
      params:
        file: ntp/*.tgz
        acl: public-read
- name: upload-current-vault
  serial_groups: [vault,concurrent-group-1]
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - in_parallel:
      - get: vault
        attempts: 2
        version: { tag: "((vault-version))" }
        trigger: true
        params: {tarball: true}
      - get: cf-ops-automation
        params: { submodules: none}
        attempts: 2
        passed: [ init-concourse-boshrelease-for-hello-world-root-depls ]
    - task: generate-vault-name
      input_mapping: {release: vault}
      output_mapping: {result-dir: vault}
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((docker-registry-url))concourse/busyboxplus
            tag: "git"
        inputs:
          - name: release
        outputs:
          - name: result-dir
        run:
          path: sh
          args:
          - -exc
          - |
            VERSION=$(cat release/version)
            cp release/${RELEASE_PREFIX}-${VERSION}.tgz result-dir/${RELEASE_PREFIX}-${TARGET_VERSION}.tgz
        params:
          RELEASE_PREFIX: vault
          TARGET_VERSION: ((vault-version))
    - put: vault-s3
      params:
        file: vault/*.tgz
        acl: public-read
- name: upload-latest-vault
  serial_groups: [vault,concurrent-group-1]
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - in_parallel:
      - get: vault
        attempts: 2
        version: every
        trigger: true
        params: {tarball: true}
      - get: cf-ops-automation
        params: { submodules: none}
        attempts: 2
        passed: [ upload-current-vault ]
    - task: generate-vault-name
      input_mapping: {release: vault}
      output_mapping: {result-dir: vault}
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((docker-registry-url))concourse/busyboxplus
            tag: "git"
        inputs:
          - name: release
        outputs:
          - name: result-dir
        run:
          path: sh
          args:
          - -exc
          - |
            VERSION=$(cat release/version)
            cp release/${RELEASE_PREFIX}-${VERSION}.tgz result-dir/${RELEASE_PREFIX}-${VERSION}.tgz
        params:
          RELEASE_PREFIX: vault
          TARGET_VERSION: ((vault-version))
    - put: vault-s3
      params:
        file: vault/*.tgz
        acl: public-read
groups:
- name: Hello-world-root-depls
  jobs:
  - init-concourse-boshrelease-for-hello-world-root-depls
  - retrigger-all-uploads
  - upload-current-ntp
  - upload-latest-ntp
  - upload-current-vault
  - upload-latest-vault
- name: "n*"
  jobs:
  - upload-current-ntp
  - upload-latest-ntp
- name: "v*"
  jobs:
  - upload-current-vault
  - upload-latest-vault
