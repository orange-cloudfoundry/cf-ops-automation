@startuml
title
 Script lifecycle overview
end title
box "Ruby" #LightGreen
	participant "Pipeline generator" as generator
end box

box "Ruby ERB template" #LightBlue
	participant depls
	participant "cf-apps"
	participant news
	participant "sync-helper"
	participant init
end box

box "Subsystem" #Green
	entity bosh
	entity CloudFondry as CF
end box
autonumber

generator -> depls: generate pipeline
depls -> depls: manifest generation
    note right: convert using spruce <xxx>**-tpl**.yml to <xxx>.yml
 
depls -> depls: post-generate.sh
    note right
     can execute shell operation or spruce task.
     **Restrictions**: see Readme.md
    end note
depls -> depls:  pre-bosh-deploy.sh
    note right: can execute shell operation or spiff task.

depls -> bosh: bosh release deployment
depls -> depls: post-bosh-deploy.sh
depls -> bosh: run errands
... ~~in parallel~~ ...
autonumber stop
depls --> depls: support terraform
depls --> depls: support cloud/runtime config
depls --> depls: support deploy.sh
    note right
        can be used to upload bosh release
        not available on bosh.io. See FAQ.
    end note

== ==
autonumber 1

generator -> "cf-apps": generate pipeline
"cf-apps" -> "cf-apps": cf manifest generation
    note right: convert using spruce <xxx>**_manifest-tpl**.yml to <xxx>.yml
"cf-apps" -> "cf-apps": pre-cf-push.sh
"cf-apps" -> CF: push application
"cf-apps" -> "cf-apps": post-bosh-deploy.sh
    note right: this script can also be use in this pipeline

== ==
autonumber 1
    note over news, init
        no specific script support
    end note
generator -> news: generate pipeline
generator -> "sync-helper": generate pipeline
generator -> "init": generate pipeline


@enduml
