
---
resource_types:
- name: slack-notification
  type: registry-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: v1.4.2
- name: meta
  type: registry-image
  source:
    repository: olhtbr/metadata-resource
    tag: 2.0.1
resources:
- name: failure-alert
  icon: slack
  type: slack-notification
  source:
    url: ((slack-webhook))
    proxy: ((slack-proxy))
    proxy_https_tunnel: ((slack-proxy-https-tunnel))
    disable: ((slack-disable))
- name: secrets-empty-depls-limited
  icon: source-branch
  type: git
  source:
    uri: ((secrets-uri))
    paths: ["private-config.yml", "empty-depls/ci-deployment-overview.yml", "empty-depls/secrets", "shared"]
    branch: ((secrets-branch))
    skip_ssl_verification: true
- name: secrets-full-writer
  icon: source-pull
  type: git
  source:
    uri: ((secrets-uri))
    branch: ((secrets-branch))
    skip_ssl_verification: true
- name: paas-templates-empty-depls
  icon: home-analytics
  type: git
  source:
    uri: ((paas-templates-uri))
    paths: ["shared-config.yml", "meta-inf.yml", "empty-depls/root-deployment.yml", "empty-depls/template"]
    branch: pipeline-current-((paas-templates-branch))
    skip_ssl_verification: true
- name: cf-ops-automation
  type: git
  icon: rocket
  source:
    uri: ((cf-ops-automation-uri))
    branch: ((cf-ops-automation-branch))
    tag_filter: ((cf-ops-automation-tag-filter))
    skip_ssl_verification: true
jobs:
- name: execute-deploy-script
  serial: true
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - in_parallel:
      - get: secrets-full-writer
        params: { submodules: none, depth: 0 }
      - get: secrets-empty-depls-limited
        params: { submodules: none, depth: 0 }
        trigger: true
      - get: paas-templates-empty-depls
        params: { submodules: none, depth: 0 }
        trigger: true
      - get: cf-ops-automation
        params: { submodules: none, depth: 0 }
      - get: k8s-configs-repository
        params: { submodules: none }
    - task: apply-iaas-type-and-profiles
      input_mapping:
        paas-templates-resource: paas-templates-empty-depls
      file: cf-ops-automation/concourse/tasks/apply_iaas_type_and_profiles/task.yml
      params:
        ROOT_DEPLOYMENT_NAME: empty-depls
        COA_DEPLOYMENT_NAME: hooks
        CONFIG_DIR: k8s
        IAAS_TYPE: ((iaas-type))
        PROFILES: ((profiles))
    - task: run-deploy.sh
      input_mapping: { paas-templates-resource: paas-templates-empty-depls,  credentials-resource: secrets-full-writer }
      output_mapping: { result-dir: updated-k8s-repo }
      file: cf-ops-automation/concourse/tasks/execute_k8s_shells/task.yml
      params:
        COA_DEPLOYMENT_NAME: empty-depls-k8s
        CUSTOM_SCRIPT_DIR: paas-templates-resource/empty-depls/hooks/k8s
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: "((credhub-secret))"
        CREDHUB_CA_CERT: credentials-resource/shared/certs/internal_paas-ca/server-ca.crt
        IAAS_TYPE: ((iaas-type))
        PROFILES: ((profiles))
        FILE_EXECUTION_FILTER: "deploy*.sh"
    - put: k8s-configs-repository
      attempts: 2
      get_params: { submodules: none, depth: 0 }
      params:
        repository: updated-k8s-repo
        rebase: true
groups:
- name: empty-depls
  jobs:
    - execute-deploy-script
- name: utils
  jobs:
    - execute-deploy-script
