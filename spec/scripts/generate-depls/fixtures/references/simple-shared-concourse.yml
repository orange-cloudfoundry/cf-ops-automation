
---
display:
  background_image: ((background-image-url))
resource_types:
  - name: concourse-5-pipeline
    type: registry-image
    source:
      repository: concourse/concourse-pipeline-resource
      tag: 5.0.0
  - name: concourse-pipeline
    type: registry-image
    source:
      repository: elpaasoci/concourse-pipeline-resource
      tag: 7.9.1
  - name: slack-notification
    type: registry-image
    source:
      repository: elpaasoci/slack-notification-resource
      tag: v1.7.0-orange
resources:
- name: failure-alert
  icon: slack
  type: slack-notification
  source:
    url: ((slack-webhook))
    proxy: ((slack-proxy))
    proxy_https_tunnel: ((slack-proxy-https-tunnel))
    disable: ((slack-disable))
- name: concourse-for-simple-depls
  icon: concourse-ci
  type: concourse-pipeline
  source:
    target: ((concourse-simple-depls-target))
    insecure: ((concourse-simple-depls-insecure))
    teams:
    - name: main
      username: ((concourse-simple-depls-username))
      password: ((concourse-simple-depls-password))
- name: concourse-legacy-for-simple-depls
  icon: concourse-ci
  type: concourse-pipeline
  source:
    target: ((concourse-simple-depls-target))
    insecure: ((concourse-simple-depls-insecure))
    teams:
      - name: main
        username: ((concourse-simple-depls-username))
        password: ((concourse-simple-depls-password))
- name: cf-ops-automation
  icon: rocket
  type: git
  source:
    uri: ((cf-ops-automation-uri))
    branch: ((cf-ops-automation-branch))
    tag_filter: ((cf-ops-automation-tag-filter))
    skip_ssl_verification: true
- name: secrets-simple-depls-concourse-deployer-sample
  icon: source-merge
  type: git
  source:
    uri: ((secrets-uri))
    paths: ["simple-depls/concourse-deployer-sample", "shared", "coa/config", "private-config.yml"]
    branch: ((secrets-branch))
    skip_ssl_verification: true
- name: paas-templates-simple-depls-concourse-deployer-sample
  icon: home-edit
  type: git
  source:
    uri: ((paas-templates-uri))
    paths: ["simple-depls/concourse-deployer-sample/concourse-pipeline-config", "simple-depls/root-deployment.yml", "shared-config.yml", "meta-inf.yml"]
    # We trigger before pipeline-current-<paas-template> to update generated pipelines at first
    branch: ((paas-templates-branch))
    skip_ssl_verification: true
jobs:
- name: deploy-concourse-concourse-deployer-sample-pipeline
  serial_groups: [concurrent-group-0]
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      icon_url: https://pbs.twimg.com/profile_images/714899641628753920/3C8UrVPf.jpg
      text: |
        ![failed](https://rawgit.com/orange-cloudfoundry/travis-resource/master/ci/images/concourse-red.png) Failed to deploy [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      username: Concourse
  plan:
  - in_parallel:
    - get: paas-templates-simple-depls-concourse-deployer-sample
      params: { submodules: none, depth: 0 }
      attempts: 4
      trigger: true
    - get: secrets-simple-depls-concourse-deployer-sample
      params: { submodules: none, depth: 0 }
      attempts: 4
      trigger: true
    - get: cf-ops-automation
      params: { submodules: none, depth: 0 }
      attempts: 4
      trigger: false
  - task: spruce-processing-concourse-deployer-sample
    input_mapping: {scripts-resource: cf-ops-automation, credentials-resource: secrets-simple-depls-concourse-deployer-sample, additional-resource: paas-templates-simple-depls-concourse-deployer-sample}
    output_mapping: {generated-files: spruced-files}
    file: cf-ops-automation/concourse/tasks/generate_manifest/task.yml
    params:
      SPRUCE_FILE_BASE_PATH: credentials-resource/simple-depls/concourse-deployer-sample
      YML_TEMPLATE_DIR: additional-resource/simple-depls/concourse-deployer-sample/concourse-pipeline-config
      YML_FILES: |
          ./credentials-resource/simple-depls/concourse-deployer-sample/secrets/secrets.yml
          ./credentials-resource/shared/secrets.yml
          ./additional-resource/meta-inf.yml
      CUSTOM_SCRIPT_DIR: additional-resource/simple-depls/concourse-deployer-sample/concourse-pipeline-config
      IAAS_TYPE: ((iaas-type))
      PROFILES: ((profiles))
  - task: execute-concourse-deployer-sample-pre-deploy
    input_mapping: {scripts-resource: cf-ops-automation, template-resource: paas-templates-simple-depls-concourse-deployer-sample, credentials-resource: secrets-simple-depls-concourse-deployer-sample, additional-resource: spruced-files}
    output_mapping: {generated-files: pre-deploy-resource}
    file: cf-ops-automation/concourse/tasks/pre_bosh_deploy.yml
    params:
      CUSTOM_SCRIPT_DIR: template-resource/simple-depls/concourse-deployer-sample/concourse-pipeline-config
      SECRETS_DIR: credentials-resource/simple-depls/concourse-deployer-sample
  - task: copy-concourse-deployer-sample-required-files
    input_mapping: {scripts-resource: cf-ops-automation, template-resource: paas-templates-simple-depls-concourse-deployer-sample, credentials-resource: secrets-simple-depls-concourse-deployer-sample, additional-resource: pre-deploy-resource}
    output_mapping: {generated-files: bosh-inputs}
    file: cf-ops-automation/concourse/tasks/copy_deployment_required_files.yml
    params:
      CUSTOM_SCRIPT_DIR: template-resource/simple-depls/concourse-deployer-sample/concourse-pipeline-config
      SECRETS_DIR: credentials-resource/simple-depls/concourse-deployer-sample
      MANIFEST_NAME: concourse-deployer-sample.yml
  - task: bosh-interpolate-pipeline-with-ops-and-vars-files
    input_mapping:
      bosh-inputs: bosh-inputs
      manifest-dir: bosh-inputs
      scripts-resource: cf-ops-automation
      secrets: secrets-simple-depls-concourse-deployer-sample
    output_mapping: {result-dir: final-concourse-deployer-sample-pipeline}
    file: cf-ops-automation/concourse/tasks/bosh_interpolate/task.yml
    params:
       VARS_FILES_SUFFIX: vars.yml
       OPS_FILES_SUFFIX:  operators.yml
       BOSH_YAML_FILE: concourse-deployer-sample.yml
  - task: generate-concourse-pipeline-config
    input_mapping:
      config-resource: secrets-simple-depls-concourse-deployer-sample
      pipeline-path: final-concourse-deployer-sample-pipeline
    file: cf-ops-automation/concourse/tasks/generate_single_concourse_pipeline_config/task.yml
    params:
      PIPELINE_TEAM: main
      PIPELINE_NAME: concourse-deployer-sample
      PIPELINE_NAME_PREFIX: simple-depls-
      CONFIG_PATH: config-resource/coa/config
      OUTPUT_CONFIG_PATH: secrets-simple-depls-concourse-deployer-sample/coa/config
      OUTPUT_PIPELINE_PATH: final-concourse-deployer-sample-pipeline
  - try:
      put: concourse-for-simple-depls
      attempts: 3
      params:
        pipelines_file: concourse-pipeline-config/pipelines-definitions.yml
      on_success:
        task: set-success-tag
        output_mapping: { success-tag: concourse-micro-success}
        config: &success_tag
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: elpaasoci/git-ssh
              tag: 4966e7c4847f39a6f349536c3a4f993b377e60c5
          outputs:
            - name: success-tag
          run:
            path: sh
            args:
              - -ec
              - touch success-tag/task.ok
      on_failure:
        put: concourse-legacy-for-simple-depls
        attempts: 3
        params:
          pipelines_file: concourse-pipeline-config/pipelines-definitions.yml
        on_success:
          task: set-success-tag
          output_mapping: { success-tag: concourse-micro-legacy-success}
          config: *success_tag
  - task: check-success-tag
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: elpaasoci/git-ssh
          tag: 4966e7c4847f39a6f349536c3a4f993b377e60c5
      inputs:
        - name: concourse-micro-success
          optional: true
        - name: concourse-micro-legacy-success
          optional: true
      run:
        path: sh
        args:
          - -ec
          - |
            if [ -e concourse-micro-success/task.ok ];then
              echo "Task concourse-micro successfull"
              exit 0
            fi
            if [ -e concourse-micro-legacy-success/task.ok ];then
              echo "Task concourse-micro-legacy successfull"
              exit 0
            fi
            echo "Failed to update pipelines, please check logs"
            exit 1
  - task: execute-concourse-deployer-sample-post-deploy
    input_mapping: {scripts-resource: cf-ops-automation, template-resource: paas-templates-simple-depls-concourse-deployer-sample, credentials-resource: secrets-simple-depls-concourse-deployer-sample, additional-resource: final-concourse-deployer-sample-pipeline}
    output_mapping: {generated-files: post-deploy-result}
    file: cf-ops-automation/concourse/tasks/post_bosh_deploy.yml
    params:
      CUSTOM_SCRIPT_DIR: template-resource/simple-depls/concourse-deployer-sample/concourse-pipeline-config
      SECRETS_DIR: credentials-resource/simple-depls/concourse-deployer-sample
groups:
  - name: all
    jobs: ["*"]
  - name: simple-depls
    jobs:
      - deploy-concourse-concourse-deployer-sample-pipeline
