---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
resources:
- name: failure-alert
  type: slack-notification
  source:
    url: "((slack-webhook))"
    ca_certs:
    - domain: "((slack-custom-domain))"
      cert: "((slack-custom-cert))"
    - domain: "((slack-custom-root-domain))"
      cert: "((slack-custom-root-cert))"
- name: cf-ops-automation
  type: git
  source:
    uri: "((cf-ops-automation-uri))"
    branch: "((cf-ops-automation-branch))"
    tag_filter: "((cf-ops-automation-tag-filter))"
    skip_ssl_verification: true
jobs:
- name: init-concourse-stemcells-for-dummy-depls
  on_failure:
    put: failure-alert
    params:
      channel: "((slack-channel))"
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
  - aggregate:
    - get: cf-ops-automation
      params:
        submodules: none
      attempts: 3
  - task: generate-dummy-depls-flight-plan
    output_mapping:
      result-dir: init-dummy-depls-plan
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: concourse/busyboxplus
          tag: git
      outputs:
      - name: result-dir
      run:
        path: sh
        args:
        - "-exc"
        - ''
      params:
        BUILD_PIPELINE_NAME: dummy-depls-s3-stemcell-upload-generated
  - task: fly-into-concourse
    input_mapping:
      fly-cmd: init-dummy-depls-plan
    output_mapping:
      flight-report: concourse-dummy-depls-init-report
    file: cf-ops-automation/concourse/tasks/fly_execute_commands.yml
    params:
      ATC_EXTERNAL_URL: "((concourse-dummy-depls-target))"
      FLY_USERNAME: "((concourse-dummy-depls-username))"
      FLY_PASSWORD: "((concourse-dummy-depls-password))"