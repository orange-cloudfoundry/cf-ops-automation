
---
meta:
  tasks:
    - &on_failure
      put: failure-alert
      params:
        channel: ((slack-channel))
        text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        username: Concourse
display:
  background_image: ((background-image-url))
resource_types:
- name: slack-notification
  type: registry-image
  source:
    repository: elpaasoci/slack-notification-resource
    tag: v1.7.0-orange
- name: bosh-deployment-v2
  type: registry-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
    tag: v2.12.0
resources:
  - name: failure-alert
    icon: slack
    type: slack-notification
    source:
      url: ((slack-webhook))
      proxy: ((slack-proxy))
      proxy_https_tunnel: ((slack-proxy-https-tunnel))
      disable: ((slack-disable))
  - name: secrets-full-writer
    icon: source-pull
    type: git
    source:
      uri: ((secrets-uri))
      branch: ((secrets-branch))
      skip_ssl_verification: true
  - name: paas-templates-empty-depls-limited
    icon: home-analytics
    type: git
    source:
      uri: ((paas-templates-uri))
      paths:
        - ".gitmodules"
        - "shared-config.yml"
        - "meta-inf.yml"
        - "empty-depls/template"
        - "empty-depls/**/deployment-dependencies*.yml"
        - "empty-depls/root-deployment.yml"
      branch: ((paas-templates-precompile-branch))
      skip_ssl_verification: true
  - name: cf-ops-automation
    type: git
    icon: rocket
    source:
      uri: ((cf-ops-automation-uri))
      branch: ((cf-ops-automation-branch))
      tag_filter: ((cf-ops-automation-tag-filter))
      skip_ssl_verification: true
  - name: ((stemcell-main-name))
    type: s3
    icon: home-floor-l
    source:
      bucket: ((s3-stemcell-bucket))
      region_name: ((s3-stemcell-region-name))
      regexp: ((stemcell-name-prefix))((stemcell-main-name))/bosh-stemcell-(.*)-((stemcell-main-name)).tgz
      access_key_id: ((s3-stemcell-access-key-id))
      secret_access_key: ((s3-stemcell-secret-key))
      endpoint: ((s3-stemcell-endpoint))
      skip_ssl_verification: ((s3-stemcell-skip-ssl-verification))
    version: { path: ((stemcell-name-prefix))((stemcell-main-name))/bosh-stemcell-((stemcell.version))-((stemcell-main-name)).tgz }
  - name: secrets-empty-depls-trigger
    icon: source-commit
    type: git
    source:
      uri: ((secrets-uri))
      paths: ["private-config.yml", "empty-depls", "shared"]
      branch: ((secrets-branch))
      skip_ssl_verification: true
  - name: paas-templates-empty-depls-versions
    icon: home-thermometer
    type: git
    source:
      uri: ((paas-templates-uri))
      paths: ["empty-depls/root-deployment.yml"]
      branch: ((paas-templates-precompile-branch))
      skip_ssl_verification: true
jobs:
  - name: push-boshreleases
    serial: true
    on_failure: *on_failure
    plan:
      - in_parallel:
          - get: cf-ops-automation
            params: { submodules: none }
            trigger: true
          - get : secrets-full-writer
            params: { submodules: none }
          - get: paas-templates-empty-depls-limited
            params: { submodules: none }
            trigger: true
      - task: repackage-releases
        input_mapping: { templates-resource: paas-templates-empty-depls-limited, secrets: secrets-full-writer }
        file:  cf-ops-automation/concourse/tasks/repackage_boshreleases/task.yml
        params:
          BOSH_CLIENT: ((bosh-username))
          BOSH_CLIENT_SECRET: ((bosh-password))
          BOSH_TARGET: ((bosh-target))
          BOSH_CA_CERT: secrets/shared/certs/internal_paas-ca/server-ca.crt
          ROOT_DEPLOYMENT_NAME: empty-depls
      - task: repackage-releases-fallback
        file:  cf-ops-automation/concourse/tasks/repackage_boshreleases_fallback/task.yml
      - task: upload-to-director-for-runtime-config
        # this is required to manage runtime config bosh release upload
        attempts: 2
        input_mapping: { releases-to-upload: repackaged-releases-fallback, config-resource: secrets-full-writer }
        file:  cf-ops-automation/concourse/tasks/bosh_upload_releases/task.yml
        params:
          BOSH_CLIENT: ((bosh-username))
          BOSH_CLIENT_SECRET: ((bosh-password))
          BOSH_ENVIRONMENT: ((bosh-target))
          BOSH_CA_CERT: config-resource/shared/certs/internal_paas-ca/server-ca.crt
      - task: check-repackaging-errors
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: elpaasoci/curl-ssl
              tag: 16d8df77e94455af3bccce2b058318fd3fd8b9bc
          inputs:
            - name: repackaged-releases-fallback
          run:
            path: sh
            args:
              - -ec
              - |
                cd repackaged-releases-fallback
                if [ -e fallback-fixes.yml ]; then
                echo "=========================================================="
                  echo "Dump fallback-fixes"
                  cat fallback-fixes.yml
                fi
                echo "=========================================================="
                  if [ -e fallback-errors.yml ]; then
                    echo "/!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ "
                    echo "Dump fallback-errors"
                    cat fallback-errors.yml
                    echo "/!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ "
                    exit 1
                  elif [ -e errors.yml ]; then
                    echo "/!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ "
                    echo "Dump errors"
                    cat errors.yml
                    echo "/!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ /!\ "
                    exit 1
                  else
                    echo "No errors detected"
                  fi
  - name: upload-stemcell-to-s3
    serial: true
    on_failure: *on_failure
    plan:
      - in_parallel:
          - get: cf-ops-automation
            params: { submodules: none }
            trigger: true
          - get : secrets-full-writer
            params: { submodules: none }
          - get: paas-templates-empty-depls-limited
            params: { submodules: none }
            trigger: true
      - task: upload-stemcells
        attempts: 2
        input_mapping: { templates-resource: paas-templates-empty-depls-limited }
        file:  cf-ops-automation/concourse/tasks/s3_stemcells_upload/task.yml
        params:
          BUCKET: ((s3-stemcell-bucket))
          REGION_NAME: ((s3-stemcell-region-name))
          ACCESS_KEY_ID: ((s3-stemcell-access-key-id))
          SECRET_ACCESS_KEY: ((s3-stemcell-secret-key))
          ENDPOINT: ((s3-stemcell-endpoint))
          SKIP_SSL_VERIFICATION: ((s3-stemcell-skip-ssl-verification))
          STEMCELL_PREFIX: ((stemcell-name-prefix))
          STEMCELL_MAIN_NAME: ((stemcell-main-name))
          STEMCELL_BASE_LOCATION: https://bosh.io/d/stemcells
          VERSIONS_FILE: templates-resource/empty-depls/root-deployment.yml
  - name: upload-stemcell-to-director
    serial: true
    on_failure: *on_failure
    plan:
      - in_parallel:
          - get: cf-ops-automation
            params: { submodules: none }
            trigger: true
          - get : secrets-full-writer
            params: { submodules: none }
          - get: ((stemcell-main-name))
            trigger: true
            attempts: 2
      - task: upload-to-director
        attempts: 2
        input_mapping: { stemcell: ((stemcell-main-name)), config-resource: secrets-full-writer }
        file:  cf-ops-automation/concourse/tasks/bosh_upload_stemcell/task.yml
        params:
          BOSH_CLIENT: ((bosh-username))
          BOSH_CLIENT_SECRET: ((bosh-password))
          BOSH_ENVIRONMENT: ((bosh-target))
          BOSH_CA_CERT: config-resource/shared/certs/internal_paas-ca/server-ca.crt
  - name: init-concourse-boshrelease-and-stemcell-for-empty-depls
    on_failure: *on_failure
    plan:
    - in_parallel:
        - get: cf-ops-automation
          params: { submodules: none}
          attempts: 2
          #trigger: true
        - get: secrets-empty-depls-trigger
          params: { submodules: none}
          attempts: 2
        - get: paas-templates-empty-depls-versions
          params: { submodules: none}
          attempts: 2
          trigger: true
    - task: generate-empty-depls-flight-plan
      output_mapping: {result-dir: init-empty-depls-plan}
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: elpaasoci/curl-ssl
            tag: 16d8df77e94455af3bccce2b058318fd3fd8b9bc
        outputs:
          - name: result-dir
        run:
          path: sh
          args:
          - -ec
          - |
            echo "check-resource -r $BUILD_PIPELINE_NAME/((stemcell-main-name)) --from path:((stemcell-name-prefix))((stemcell-main-name))/bosh-stemcell-((stemcell.version))-((stemcell-main-name)).tgz" | tee -a result-dir/flight-plan
        params:
          BUILD_PIPELINE_NAME: empty-depls-bosh-precompile-generated
    - task: fly-into-concourse
      input_mapping: {fly-cmd: init-empty-depls-plan}
      output_mapping: {flight-report: concourse-empty-depls-init-report}
      file: cf-ops-automation/concourse/tasks/fly_execute_commands.yml
      params:
        ATC_EXTERNAL_URL: ((concourse-empty-depls-target))
        FLY_USERNAME: ((concourse-empty-depls-username))
        FLY_PASSWORD: "((concourse-empty-depls-password))"
        FLY_TEAM: empty-depls
groups:
  - name: empty-depls
    jobs:
      - "*"
  - name: "utils"
    jobs:
      - init-concourse-boshrelease-and-stemcell-for-empty-depls
      - push-boshreleases
      - upload-stemcell-to-director
      - upload-stemcell-to-s3
