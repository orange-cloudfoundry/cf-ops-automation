
---
display:
  background_image: ((background-image-url))
resource_types:
  - name: slack-notification
    type: registry-image
    source:
      repository: elpaasoci/slack-notification-resource
      tag: v1.7.0-orange
resources:
- name: failure-alert
  icon: slack
  type: slack-notification
  source:
    url: ((slack-webhook))
    proxy: ((slack-proxy))
    proxy_https_tunnel: ((slack-proxy-https-tunnel))
    disable: ((slack-disable))
- name: secrets-full
  icon: source-pull
  type: git
  source:
    uri: ((secrets-uri))
    branch: ((secrets-branch))
    skip_ssl_verification: true
- name: secrets-full-writer
  icon: source-pull
  type: git
  source:
    uri: ((secrets-uri))
    branch: ((secrets-branch))
    skip_ssl_verification: true
- name: cf-ops-automation
  icon: rocket
  type: git
  source:
    uri: ((cf-ops-automation-uri))
    branch: ((cf-ops-automation-branch))
    skip_ssl_verification: true
    tag_filter: ((cf-ops-automation-tag-filter))
- name: secrets-test-app
  icon: source-merge
  type: git
  source:
    uri: ((secrets-uri))
    paths: ["private-config.yml", "apps-depls/my_cf_app", "shared"]
    branch: ((secrets-branch))
    skip_ssl_verification: true
- name: paas-template-test-app
  icon: home-edit
  type: git
  source:
    uri: ((paas-templates-uri))
    paths: ["shared-config.yml", "meta-inf.yml", "apps-depls/my_cf_app"]
    branch: ((paas-templates-branch))
    skip_ssl_verification: true
jobs:
- name: retrigger-all-jobs
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failure during [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - in_parallel:
      - get: cf-ops-automation
        params: { submodules: none, depth: 0 }
      - get: secrets-full
        params: { submodules: none, depth: 0 }
    - task: generate-apps-depls-pipeline
      output_mapping: {result-dir: trigger-apps-depls-plan}
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: elpaasoci/curl-ssl
            tag: 16d8df77e94455af3bccce2b058318fd3fd8b9bc
        outputs:
          - name: result-dir
        run:
          path: sh
          args:
          - -ec
          - |
            echo "trigger-job -j $BUILD_PIPELINE_NAME/cf-push-test-app" >> result-dir/flight-plan
        params:
          BUILD_PIPELINE_NAME: apps-depls-cf-apps-generated
    - task: fly-into-concourse
      input_mapping: {fly-cmd: trigger-apps-depls-plan}
      output_mapping: {flight-report: concourse-apps-depls-trigger-report}
      file: cf-ops-automation/concourse/tasks/fly_execute_commands.yml
      params:
        ATC_EXTERNAL_URL: ((concourse-apps-depls-target))
        FLY_USERNAME: ((concourse-apps-depls-username))
        FLY_PASSWORD: ((concourse-apps-depls-password))
        FLY_TEAM: main
- name: cf-push-test-app
  serial: true
  serial_groups: [concurrent-group-0]
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failure during [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - in_parallel:
      - get: secrets-test-app
        params: { submodules: none, depth: 0 }
        trigger: true
      - get: secrets-full-writer
        params: { submodules: none, depth: 0 }
      - get: paas-template-test-app
        trigger: true
        params: { submodules: none, depth: 0 }
      - get: cf-ops-automation
        trigger: true
        params: { submodules: none, depth: 0 }
    - task: generate-test-app-manifest
      input_mapping: {scripts-resource: cf-ops-automation, credentials-resource: secrets-test-app, additional-resource: paas-template-test-app}
      output_mapping: {generated-files: release-manifest}
      file: cf-ops-automation/concourse/tasks/generate_manifest/task.yml
      params:
        SPRUCE_FILE_BASE_PATH: credentials-resource/apps-depls/my_cf_app/
        YML_TEMPLATE_DIR: additional-resource/apps-depls/my_cf_app/template
        YML_FILES: |
            ./credentials-resource/apps-depls/my_cf_app/secrets/meta.yml
            ./credentials-resource/apps-depls/my_cf_app/secrets/secrets.yml
            ./credentials-resource/shared/secrets.yml
            ./additional-resource/meta-inf.yml
        CUSTOM_SCRIPT_DIR: additional-resource/apps-depls/my_cf_app/template
    - task: push-test-app
      attempts: 6
      input_mapping: {scripts-resource: cf-ops-automation, templates-resource: paas-template-test-app, credentials-resource: secrets-test-app, additional-resource: release-manifest}
      output_mapping: {generated-files: final-release-manifest}
      file: cf-ops-automation/concourse/tasks/cf_push.yml
      params:
        CUSTOM_SCRIPT_DIR: templates-resource/apps-depls/my_cf_app/template
        SECRETS_DIR: credentials-resource/apps-depls/my_cf_app
        CF_MANIFEST: generated-files/test-app_manifest.yml
        CF_API_URL: https://my-cloudfroundry.org
        CF_ORG: my-test-org
        CF_SPACE: my-test-space
        CF_USERNAME: "\"a-test-User"
        CF_PASSWORD: "'a-test-Password"
    - task: update-test-app-files
      input_mapping: {reference-resource: secrets-full-writer, generated-resource: final-release-manifest}
      output_mapping: {updated-git-resource: updated-test-app-secrets}
      file: cf-ops-automation/concourse/tasks/git_update_a_file_from_generated.yml
      params:
        OLD_FILE: apps-depls/my_cf_app/test-app_manifest.yml
        NEW_FILE: "test-app_manifest.yml"
        PROFILES: ((profiles))
        COMMIT_MESSAGE: "test-app generated CF manifest auto update\n\nActive profiles: ${PROFILES}\n[skip ci]"
    - put: secrets-full-writer
      attempts: 6
      get_params: { submodules: none, depth: 0 }
      params:
        repository: updated-test-app-secrets
        rebase: true
    - task: execute-test-app-post-deploy
      input_mapping: {scripts-resource: cf-ops-automation, template-resource: paas-template-test-app, credentials-resource: secrets-test-app, additional-resource: release-manifest}
      output_mapping: {generated-files: post-deploy-result}
      file: cf-ops-automation/concourse/tasks/post_bosh_deploy.yml
      params:
        CUSTOM_SCRIPT_DIR: template-resource/apps-depls/my_cf_app/template
        SECRETS_DIR: credentials-resource/apps-depls/my_cf_app
        CF_API_URL: https://my-cloudfroundry.org
        CF_ORG: my-test-org
        CF_SPACE: my-test-space
        CF_USERNAME: "\"a-test-User"
        CF_PASSWORD: "'a-test-Password"
groups:
- name: apps-depls
  jobs:
      - retrigger-all-jobs
      - cf-push-test-app
- name: app-t
  jobs:
    - cf-push-test-app
- name: utils
  jobs:
    - retrigger-all-jobs
