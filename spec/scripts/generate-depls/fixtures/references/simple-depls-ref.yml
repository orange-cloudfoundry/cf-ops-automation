---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

  - name: cron-resource
    type: docker-image
    source:
      repository: cftoolsmiths/cron-test

  - name: bosh-config
    type: docker-image
    source:
      repository: dellemcdojo/bosh-config-resource

  - name: concourse-pipeline
    type: docker-image
    source:
      repository: concourse/concourse-pipeline-resource

  - name: bosh-deployment-v2
    type: docker-image
    source:
      repository: cloudfoundry/bosh-deployment-resource

  - name: bosh-errand
    type: docker-image
    source:
      repository: starkandwayne/bosh2-errand-resource

resources:

- name: at-noon
  type: cron-resource
  source:
    expression: "15 12 * * 1-5"
    location: "Europe/Paris"
    fire_immediately: true

- name: failure-alert
  type: slack-notification
  source:
    url: {{slack-webhook}}
    ca_certs:
    - domain: {{slack-custom-domain}}
      cert: {{slack-custom-cert}}
    - domain: {{slack-custom-root-domain}}
      cert: {{slack-custom-root-cert}}

- name: bosh-stemcell
  type: bosh-io-stemcell
  source:
    name: {{stemcell-name}}

- name: secrets-simple-depls
  type: git
  source:
    uri: {{secrets-uri}}
    paths: ["simple-depls/secrets","shared"]
    branch: {{secrets-branch}}
    skip_ssl_verification: true

- name: paas-template-simple-depls
  type: git
  source:
    uri: {{paas-templates-uri}}
    paths: ["simple-depls/template"]
    branch: {{paas-templates-branch}}
    skip_ssl_verification: true

- name: cf-ops-automation
  type: git
  source:
    uri: {{cf-ops-automation-uri}}
    branch: {{cf-ops-automation-branch}}
    tag_filter: {{cf-ops-automation-tag-filter}}
    skip_ssl_verification: true

- name: secrets-ntp
  type: git
  source:
    uri: {{secrets-uri}}
    
    
    paths: ["simple-depls/ntp","shared"]
    branch: {{secrets-branch}}
    skip_ssl_verification: true

- name: paas-template-ntp
  type: git
  source:
    uri: {{paas-templates-uri}}
    paths: ["simple-depls/ntp"]
    branch: {{paas-templates-branch}}
    skip_ssl_verification: true

- name: ntp-deployment
  type: bosh-deployment-v2
  source:
    target: {{bosh-target}}
    client: {{bosh-username}}
    client_secret: {{bosh-password}}
    deployment: ntp
    ca_cert: "-----BEGIN CERTIFICATE-----\nMIIDXDCCAkSgAwIBAgIBATANBgkqhkiG9w0BAQsFADA/MRMwEQYKCZImiZPyLGQB\nGRYDY29tMRYwFAYKCZImiZPyLGQBGRYGb3JhbmdlMRAwDgYDVQQDDAdUZXN0IENB\nMB4XDTE3MDkwODE0NTI1OVoXDTE5MDkwODE0NTI1OVowPzETMBEGCgmSJomT8ixk\nARkWA2NvbTEWMBQGCgmSJomT8ixkARkWBm9yYW5nZTEQMA4GA1UEAwwHVGVzdCBD\nQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALQTi5oWSpKAY5n9KtyZ\nZlo3TQBL1DWgbTgkDeSortVOL/F2niP9DI81acbIjLo2o572Z41jnz3K6GaSwviJ\nvY/K5XAgE0A66KV3ZJm6eNI7LmLXyxV59q+rtp75NuYQqqdS8FEiKUVDPUD5nJca\nQk/b+b6V/wHXz7KV6A/j/NQb9qaQu4X7WWfCXk2v2JzRd5PdBO2XNuF8WArm3zXG\nVeg3j7rB782iAKjUX93U+VYu3m7DyPQkA/owIHpw7nEaJS7KdDFFDubLwD6d0FG3\nAr9b4ttL83UlJOvvgNBo+zuIuUuOFCBtpYMI9N84fUhkh62jZa4vtfeI0tI9UBIk\nBbECAwEAAaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYD\nVR0OBBYEFJ+LRoMZCoJoPXETODONOO29xTkAMB8GA1UdIwQYMBaAFJ+LRoMZCoJo\nPXETODONOO29xTkAMA0GCSqGSIb3DQEBCwUAA4IBAQCz0iumGgPuIGttcuFCaHc8\nmBVH7D/yj8otzZAMyz91aiArooUlnzCO9xHtnwIv6qe5V4D4D8YuaIiv/tXD86tL\nVwE2TyfLeTpvHcclRAB+thhbYkVC2GgAbEOeA/JtSLGOhPbgrf/BKdjLTOEqsFJi\nqmpMrzEb08TG9CRiWo68LPu6GE84P3WFXVhC/s0ymlb5cITwTHKOwcVyu+8dIw1I\nwZ5atyWiFB040HeKe+kwxWHEG9L6NT3+R9cCTMpfYCdv4DcUlEt8WNtDcNJa5Cv1\nzVke99FdeG0PzuWmaymHrTRaAAIbjaARrp98mwxtJF1e2ANl9Qli9qiHqI4mX0Qw\n-----END CERTIFICATE-----\n"



- name: TO_BE_DEFINED
  type: concourse-pipeline
  source:
    target: {{concourse-simple-depls-target}}
    insecure: {{concourse-simple-depls-insecure}}
    teams:
    - name: main
      username: {{concourse-simple-depls-username}}
      password: {{concourse-simple-depls-password}}

- name: secrets-full
  type: git
  source:
    uri: {{secrets-uri}}
    branch: {{secrets-branch}}
    skip_ssl_verification: true

- name: paas-templates-full
  type: git
  source:
    uri: {{paas-templates-uri}}
    branch: {{paas-templates-branch}}
    skip_ssl_verification: true




- name: ntp_boshrelease
  
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/ntp-release
  


jobs:
- name: execute-deploy-script
  
  on_failure:
    put: failure-alert
    params:
      channel: {{slack-channel}}
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - get: at-noon
      trigger: true
    - aggregate:
      - get: secrets-simple-depls
        params: { submodules: none}
        passed: [update-pipeline-simple-depls-generated]
      - get: paas-template-simple-depls
        params: { submodules: none}
        passed: [update-pipeline-simple-depls-generated]
      - get: cf-ops-automation
        params: { submodules: none}
        passed: [update-pipeline-simple-depls-generated]

    - task: run-deploy.sh
      input_mapping: {script-resource: cf-ops-automation, templates: paas-template-simple-depls, secrets: secrets-simple-depls}
      file: cf-ops-automation/concourse/tasks/execute_deploy_script.yml
      params:
        CURRENT_DEPLS: simple-depls/template
        COMMON_SCRIPT_DIR: script-resource/scripts
        SECRETS_DIR: secrets
        BOSH_TARGET: {{bosh-target}}
        BOSH_CLIENT: {{bosh-username}}
        BOSH_CLIENT_SECRET: {{bosh-password}}
        BOSH_CA_CERT: secrets/shared/certs/internal_paas-ca/server-ca.crt

- name: cloud-config-and-runtime-config-for-simple-depls
  
  on_failure:
    put: failure-alert
    params:
      channel: {{slack-channel}}
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - get: secrets-simple-depls
      params: { submodules: none}
      trigger: true
      passed: [update-pipeline-simple-depls-generated]
    - get: paas-template-simple-depls
      params: { submodules: none}
      trigger: true
      passed: [update-pipeline-simple-depls-generated]
    - get: cf-ops-automation
      params: { submodules: none}
      trigger: true
      passed: [update-pipeline-simple-depls-generated]
#    - task: generate-simple-depls-terraform-outputs-cloud-config
#      input_mapping: {scripts-resource: paas-template, credentials-resource: secrets-simple-depls, additional-resource: terraform-outputs}
#      output_mapping: {generated-files: cloud-config-manifest}
#      file: paas-template/concourse/tasks/extract_terraform_outputs.yml
#      params:
#        STATE_FILE: "state-file-resource/terraform.tfstate"
#        OUTPUT_FILE: "result-dir/bosh.terraform-outputs.yml"
#
#        SPRUCE_FILE_BASE_PATH: credentials-resource/simple-depls/
#        YML_TEMPLATE_DIR: scripts-resource/simple-depls/template
#        YML_FILES: |
#            ./credentials-resource/simple-depls/secrets/meta.yml
#            ./credentials-resource/simple-depls/secrets/secrets.yml
#            ./credentials-resource/shared/secrets.yml
#        CUSTOM_SCRIPT_DIR: scripts-resource/simple-depls/template

    - task: generate-simple-depls-all-config
      input_mapping: {scripts-resource: cf-ops-automation, credentials-resource: secrets-simple-depls, additional-resource: paas-template-simple-depls}
      output_mapping: {generated-files: config-manifest}
      file: cf-ops-automation/concourse/tasks/generate-manifest.yml
      params:
        SPRUCE_FILE_BASE_PATH: credentials-resource/simple-depls/
        YML_TEMPLATE_DIR: additional-resource/simple-depls/template
        YML_FILES: |
            ./credentials-resource/simple-depls/secrets/meta.yml
            ./credentials-resource/simple-depls/secrets/secrets.yml
            ./credentials-resource/shared/secrets.yml
        CUSTOM_SCRIPT_DIR: additional-resource/simple-depls/template

    - aggregate:
      - task: update-cloud-config-for-simple-depls
        attempts: 3
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/bosh-cli
          inputs:
            - name: config-manifest
            - name: secrets-simple-depls
            - name: cf-ops-automation
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ./cf-ops-automation/scripts/bosh_login.sh {{bosh-target}} {{bosh-username}} {{bosh-password}}
                OLD_CONFIG=$(mktemp cloud-config-XXXXXX)
                bosh cloud-config >$OLD_CONFIG
                diff $OLD_CONFIG config-manifest/cloud-config.yml || true
                bosh update cloud-config config-manifest/cloud-config.yml
        ensure:
          task: update-cloud-config
          input_mapping: {reference-resource: secrets-simple-depls, generated-resource: config-manifest}
          output_mapping: {updated-git-resource: updated-cloud-config}
          file: cf-ops-automation/concourse/tasks/git_update_a_file_from_generated.yml
          params:
            OLD_FILE: "simple-depls/cloud-config.yml"
            NEW_FILE: "cloud-config.yml"
            COMMIT_MESSAGE: "simple-depls cloud-config auto update - [skip ci]"
          on_failure:
            put: failure-alert
            params:
              channel: {{slack-channel}}
              text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
              icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
              username: Concourse
          on_success:
            put: secrets-simple-depls
            get_params: {submodules: none}
            params:
              repository: updated-cloud-config
              rebase: true

      - task: update-runtime-config-for-simple-depls
        attempts: 3
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/bosh-cli
          inputs:
            - name: config-manifest
            - name: secrets-simple-depls
            - name: cf-ops-automation
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ./cf-ops-automation/scripts/bosh_login.sh {{bosh-target}} {{bosh-username}} {{bosh-password}}
                cat config-manifest/runtime-config.yml
                OLD_CONFIG=$(mktemp runtime-config-XXXXXX)
                bosh runtime-config >$OLD_CONFIG
                diff $OLD_CONFIG config-manifest/runtime-config.yml || true
                bosh update runtime-config config-manifest/runtime-config.yml
        ensure:
          task: update-runtime-config
          input_mapping: {reference-resource: secrets-simple-depls, generated-resource: config-manifest}
          output_mapping: {updated-git-resource: updated-runtime-config}
          file: cf-ops-automation/concourse/tasks/git_update_a_file_from_generated.yml
          params:
            OLD_FILE: "simple-depls/runtime-config.yml"
            NEW_FILE: "runtime-config.yml"
            COMMIT_MESSAGE: "simple-depls runtime-config auto update - [skip ci]"
          on_failure:
            put: failure-alert
            params:
              channel: {{slack-channel}}
              text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
              icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
              username: Concourse
          on_success:
            put: secrets-simple-depls
            get_params: {submodules: none}
            params:
              repository: updated-runtime-config
              rebase: true



- name: deploy-ntp
  
  on_failure:
    put: failure-alert
    params:
      channel: {{slack-channel}}
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - aggregate:
      - get: bosh-stemcell
        version: { version: {{stemcell-version}} }
        trigger: true
        attempts: 3
      - get: cf-ops-automation
        params: { submodules: none}
        passed: [update-pipeline-simple-depls-generated]
      
      - get: ntp_boshrelease
        
        version: { version: {{ntp_boshrelease-version}} }
        
        trigger: true
        attempts: 3
      
      - get: secrets-ntp
        params: { submodules: none}
        trigger: true
        passed: [update-pipeline-simple-depls-generated]
      - get: paas-template-ntp
        trigger: true
        
        params: { submodules: none}
        passed: [update-pipeline-simple-depls-generated]
    - task: generate-ntp-manifest
      input_mapping: {scripts-resource: cf-ops-automation, credentials-resource: secrets-ntp, additional-resource: paas-template-ntp}
      output_mapping: {generated-files: release-manifest}
      file: cf-ops-automation/concourse/tasks/generate-manifest.yml
      params:
        SPRUCE_FILE_BASE_PATH: credentials-resource/simple-depls/ntp/
        YML_TEMPLATE_DIR: additional-resource/simple-depls/ntp/template
        YML_FILES: |
            ./credentials-resource/simple-depls/ntp/secrets/meta.yml
            ./credentials-resource/simple-depls/ntp/secrets/secrets.yml
            ./credentials-resource/shared/secrets.yml
        CUSTOM_SCRIPT_DIR: additional-resource/simple-depls/ntp/template
    - task: execute-ntp-spiff-pre-bosh-deploy
      input_mapping: {scripts-resource: cf-ops-automation, template-resource: paas-template-ntp, credentials-resource: secrets-ntp, additional-resource: release-manifest}
      output_mapping: {generated-files: final-release-manifest}
      file: cf-ops-automation/concourse/tasks/spiff_pre_bosh_deploy.yml
      params:
        CUSTOM_SCRIPT_DIR: template-resource/simple-depls/ntp/template
        SECRETS_DIR: credentials-resource/simple-depls/ntp

    - task: convert-bosh-dns-to-ip
      output_mapping: {result-dir: bosh-generated-config}
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: concourse/busyboxplus, tag: "git"}
        outputs:
          - name: result-dir
        run:
          path: sh
          args:
          - -exc
          - |
            export DIRECTOR_IP_URL_WITHOUT_PORT=${BOSH_TARGET%%:25555}
            export DIRECTOR_IP=$(nslookup ${DIRECTOR_IP_URL_WITHOUT_PORT##https://} 2>/dev/null|tail -n2|grep Address|cut -d':' -f2)
            export DIRECTOR_IP_NO_SPACE=$(echo $DIRECTOR_IP |tr -d [:blank:])
            export BOSH_ENVIRONMENT="${DIRECTOR_IP_NO_SPACE}"
            echo '{"target": "'"$BOSH_ENVIRONMENT"'"}' > result-dir/bosh_config.json
        params:
          BOSH_TARGET: {{bosh-target}}
    
    - put: ntp-deployment
      attempts: 3
      params:
        manifest: final-release-manifest/ntp.yml
#        source_file: bosh-generated-config/bosh_config.json
        
        stemcells:
        - bosh-stemcell/stemcell.tgz
        releases: 
        
        - ntp_boshrelease/release.tgz
        
        cleanup: true
    - task: execute-ntp-post-bosh-deploy
      input_mapping: {scripts-resource: cf-ops-automation, template-resource: paas-template-ntp, credentials-resource: secrets-ntp, additional-resource: final-release-manifest}
      output_mapping: {generated-files: post-deploy-result}
      file: cf-ops-automation/concourse/tasks/post_bosh_deploy.yml
      params:
        CUSTOM_SCRIPT_DIR: template-resource/simple-depls/ntp/template
        SECRETS_DIR: credentials-resource/simple-depls/ntp

    - task: update-ntp-files
      input_mapping: {reference-resource: secrets-ntp, generated-resource: ntp-deployment}
      output_mapping: {updated-git-resource: updated-ntp-secrets}
      file: cf-ops-automation/concourse/tasks/git_update_a_file_from_generated.yml
      params:
        OLD_FILE: simple-depls/ntp/ntp.yml
        NEW_FILE: "manifest.yml"
        COMMIT_MESSAGE: "ntp generated manifest auto update - [skip ci]"
    - put: secrets-ntp
      get_params: {submodules: none}
      params:
        repository: updated-ntp-secrets
        rebase: true



- name: retrigger-all-jobs
  
  on_failure:
    put: failure-alert
    params:
      channel: {{slack-channel}}
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - aggregate:
      - get: cf-ops-automation
        params: { submodules: none}
      - get: secrets-full
        params: { submodules: none}
    - task: generate-simple-depls-pipeline
      output_mapping: {result-dir: trigger-simple-depls-plan}
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: concourse/busyboxplus, tag: "git"}
        outputs:
          - name: result-dir
        run:
          path: sh
          args:
          - -exc
          - |
            
            echo "trigger-job -j $BUILD_PIPELINE_NAME/deploy-ntp" >> result-dir/flight-plan
            
        params:
          BUILD_PIPELINE_NAME: simple-depls-generated
    - task: fly-into-concourse
      input_mapping: {fly-cmd: trigger-simple-depls-plan}
      output_mapping: {flight-report: concourse-simple-depls-trigger-report}
      file: cf-ops-automation/concourse/tasks/fly_execute_commands.yml
      params:
        ATC_EXTERNAL_URL: {{concourse-simple-depls-target}}
        FLY_USERNAME: {{concourse-simple-depls-username}}
        FLY_PASSWORD:  {{concourse-simple-depls-password}}

- name: recreate-all
  on_failure:
    put: failure-alert
    params:
      channel: {{slack-channel}}
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  serial_groups: [recreate]
  plan:
    - aggregate:
       - get: secrets-simple-depls
         params: { submodules: none}
         passed: [update-pipeline-simple-depls-generated]
       - get: paas-template-simple-depls
         params: { submodules: none}
         passed: [update-pipeline-simple-depls-generated]
       - get: cf-ops-automation
         params: { submodules: none}
         passed: [update-pipeline-simple-depls-generated]

- name: recreate-ntp
  
  on_failure:
    put: failure-alert
    params:
      channel: {{slack-channel}}
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  serial_groups: [recreate]
  plan:
    - aggregate:
       - get: secrets-simple-depls
         params: { submodules: none}
         passed: [recreate-all]
         trigger: true
       - get: paas-template-simple-depls
         params: { submodules: none}
         passed: [recreate-all]
         trigger: true
       - get: cf-ops-automation
         params: { submodules: none}
         passed: [recreate-all]

    - task: bosh-recreate-ntp
      input_mapping: {script-resource: cf-ops-automation, secrets: secrets-simple-depls}
      config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: orangecloudfoundry/bosh-cli-v2
          inputs:
            - name: script-resource
            - name: secrets
          outputs:
            - name: run-resource
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                source ./script-resource/scripts/bosh_cli_v2_login.sh ${BOSH_TARGET}
                bosh -n -d ntp recreate
      params:
         BOSH_TARGET: {{bosh-target}}
         BOSH_CLIENT: {{bosh-username}}
         BOSH_CLIENT_SECRET: {{bosh-password}}
         BOSH_CA_CERT: secrets/shared/certs/internal_paas-ca/server-ca.crt


- name: init-concourse-boshrelease-and-stemcell-for-simple-depls
  
  on_failure:
    put: failure-alert
    params:
      channel: {{slack-channel}}
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
  - aggregate:
    - get: cf-ops-automation
      params: { submodules: none}
      attempts: 3
#      trigger: true
    - get: secrets-full
      params: { submodules: none}
      attempts: 3
#      trigger: true
  - task: generate-simple-depls-flight-plan
    output_mapping: {result-dir: init-simple-depls-plan}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: concourse/busyboxplus, tag: "git"}
      outputs:
        - name: result-dir
      run:
        path: sh
        args:
        - -exc
        - |
          
          echo "check-resource -r $BUILD_PIPELINE_NAME/ntp_boshrelease --from version:{{ntp_boshrelease-version}}" >> result-dir/flight-plan
          

          echo "check-resource -r $BUILD_PIPELINE_NAME/bosh-stemcell --from version:{{stemcell-version}}" >> result-dir/flight-plan
      params:
        BUILD_PIPELINE_NAME: simple-depls-generated
  - task: fly-into-concourse
    input_mapping: {fly-cmd: init-simple-depls-plan}
    output_mapping: {flight-report: concourse-simple-depls-init-report}
    file: cf-ops-automation/concourse/tasks/fly_execute_commands.yml
    params:
      ATC_EXTERNAL_URL: {{concourse-simple-depls-target}}
      FLY_USERNAME: {{concourse-simple-depls-username}}
      FLY_PASSWORD:  {{concourse-simple-depls-password}}

- name: update-pipeline-simple-depls-generated
  
  on_failure:
    put: failure-alert
    params:
      channel: {{slack-channel}}
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
  - aggregate:
    - get: paas-template-simple-depls
      params: { submodules: none}
      attempts: 3
      trigger: true
    - get: secrets-simple-depls
      params: { submodules: none}
      attempts: 3
      trigger: true
    - get: cf-ops-automation
      params: { submodules: none}
      attempts: 3
      trigger: true
    - get: paas-templates-full
      params: { submodules: none}
      attempts: 3
      trigger: true
    - get: secrets-full
      params: { submodules: none}
      attempts: 3
      trigger: true
    
    - get: secrets-ntp
      params: { submodules: none}
    - get: paas-template-ntp
      params: { submodules: none}
    

  - task: generate-simple-depls-pipeline
    input_mapping: {script-resource: cf-ops-automation,templates: paas-templates-full,secrets: secrets-full}
    output_mapping: {result-dir: concourse-simple-depls-pipeline}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ruby, tag: 2.3.1-slim}
      inputs:
        - name: script-resource
        - name: templates
        - name: secrets
      outputs:
        - name: result-dir
      run:
        path: sh
        args:
        - -exc
        - |
          cp -r templates/. result-dir
          cp -r script-resource/. result-dir
          cp -rf secrets/. result-dir
          cd result-dir/
          ./scripts/generate-depls.rb --depls simple-depls -t ../templates -p . -o concourse
  - put: TO_BE_DEFINED
    params:
      pipelines:
      
      - name: simple-depls-generated
        team: main
        config_file: concourse-simple-depls-pipeline/concourse/pipelines/simple-depls-generated.yml
        vars_files:
          
          # trick to manage <depls>-versions.yml (not included in secrets)
         
         - paas-templates-full/simple-depls/simple-depls-versions.yml
          
     
      - name: simple-depls-cf-apps-generated
        team: main
        config_file: concourse-simple-depls-pipeline/concourse/pipelines/simple-depls-cf-apps-generated.yml
        vars_files:
          
          # trick to manage <depls>-versions.yml (not included in secrets)
         
         - paas-templates-full/simple-depls/simple-depls-versions.yml
          
     
  - task: update-concourse-depls-pipeline
    input_mapping: {reference-resource: secrets-full, generated-resource: concourse-simple-depls-pipeline}
    output_mapping: {updated-git-resource: updated-secrets}
    file: cf-ops-automation/concourse/tasks/git_update_a_file_from_generated.yml
    params:
      OLD_FILE: concourse/pipelines/simple-depls-generated.yml
      NEW_FILE: "concourse/pipelines/simple-depls-generated.yml"
      COMMIT_MESSAGE: "simple-depls generated pipeline auto update - [skip ci]"
  - task: update-concourse-cf-apps-pipeline
    input_mapping: {reference-resource: updated-secrets, generated-resource: concourse-simple-depls-pipeline}
    output_mapping: {updated-git-resource: updated-secrets}
    file: cf-ops-automation/concourse/tasks/git_update_a_file_from_generated.yml
    params:
      OLD_FILE: concourse/pipelines/simple-depls-cf-apps-generated.yml
      NEW_FILE: "concourse/pipelines/simple-depls-cf-apps-generated.yml"
      COMMIT_MESSAGE: "simple-depls cf-apps generated pipeline auto update - [skip ci]"
  - put: secrets-full
    get_params: {submodules: none}
    params:
      repository: updated-secrets
      rebase: true




groups:
- name: Simple-depls
  jobs:
  
   
    - execute-deploy-script
   
    - cloud-config-and-runtime-config-for-simple-depls
   
    - retrigger-all-jobs
   
    - recreate-all
   
    - init-concourse-boshrelease-and-stemcell-for-simple-depls
   
    - update-pipeline-simple-depls-generated
   
  
   
    - deploy-ntp
   
  
   
    - recreate-all
   
    - recreate-ntp
   
  

- name: Deploy-n*
  jobs:
   
    - deploy-ntp
   
- name: Recreate
  jobs:
   
    - recreate-all
   
    - recreate-ntp
   
- name: Utils
  jobs:
   
    - execute-deploy-script
   
    - cloud-config-and-runtime-config-for-simple-depls
   
    - retrigger-all-jobs
   
    - recreate-all
   
    - init-concourse-boshrelease-and-stemcell-for-simple-depls
   
    - update-pipeline-simple-depls-generated
   

