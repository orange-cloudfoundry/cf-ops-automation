
---
resource_types:
  - name: slack-notification
    type: registry-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: v1.4.2
resources:
- name: failure-alert
  icon: slack
  type: slack-notification
  source:
    url: ((slack-webhook))
    proxy: ((slack-proxy))
    proxy_https_tunnel: ((slack-proxy-https-tunnel))
    disable: ((slack-disable))
- name: new-version-alert
  icon: slack
  type: slack-notification
  source:
    url: ((slack-webhook))
    proxy: ((slack-proxy))
    proxy_https_tunnel: ((slack-proxy-https-tunnel))
    disable: ((slack-disable))
- name: paas-templates-full
  icon: home-assistant
  type: git
  source:
    uri: ((paas-templates-uri))
    branch: ((paas-templates-branch))
    skip_ssl_verification: true
- name: cf-ops-automation
  icon: rocket
  type: git
  source:
    uri: ((cf-ops-automation-uri))
    branch: ((cf-ops-automation-branch))
    tag_filter: ((cf-ops-automation-tag-filter))
    skip_ssl_verification: true
- name: monday
  icon: calendar-clock
  type: time
  source:
    days: [ Monday ]
    location: "Europe/Paris"
- name: ntp_boshrelease
  icon: github-circle
  type: github-release
  source:
    user: cloudfoundry-community
    repository: ntp-release
    access_token: ((bot-github-access-token))
- name: zookeeper_boshrelease
  icon: github-circle
  type: github-release
  source:
    user: cppforlife
    repository: zookeeper-release
    access_token: ((bot-github-access-token))
jobs:
- name: check-ntp_boshrelease
  serial_groups: [concurrent-group-0]
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - in_parallel:
      - get: monday
        trigger: true
      - get: ntp_boshrelease
        attempts: 2
        params: {tarball: false}
      - get: paas-templates-full
        params: { submodules: none, depth: 0 }
      - get: cf-ops-automation
        params: { submodules: none, depth: 0 }
    - task: generate-update-message
      input_mapping: {boshrelease: ntp_boshrelease}
      output_mapping: {message: ntp_boshrelease-message}
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: governmentpaas/curl-ssl
            tag: 19d32c252e328a762f75417fcee7cab6dbac9e97
        inputs:
          - name: boshrelease
        outputs:
          - name: message
        run:
          path: sh
          args:
          - -exc
          - |
            MESSAGE_FILE=message/update_notif
            NEW_VERSION=$(cat boshrelease/version)
            RELEASE_URL=$(cat boshrelease/url|sed 's|/d/|/releases/|'|sed 's/?v=/?version=/')
            if [ "${NEW_VERSION}" != "${CURRENT_VERSION}" ]
            then
              echo "New version of ntp_boshrelease detected: [${NEW_VERSION}](${RELEASE_URL})." >${MESSAGE_FILE}
              echo "simple-depls is using ${CURRENT_VERSION} of ntp_boshrelease" >>${MESSAGE_FILE}
            else
              echo "simple-depls is  running the latest ntp_boshrelease (ie [${NEW_VERSION}](${RELEASE_URL}))." >${MESSAGE_FILE}
            fi
      params:
        CURRENT_VERSION: ((releases.ntp_boshrelease.version))
    - put: new-version-alert
      params:
        channel: ((slack-channel))
        text_file: ntp_boshrelease-message/update_notif
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        username: Concourse
- name: check-zookeeper_boshrelease
  serial_groups: [concurrent-group-1]
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - in_parallel:
      - get: monday
        trigger: true
      - get: zookeeper_boshrelease
        attempts: 2
        params: {tarball: false}
      - get: paas-templates-full
        params: { submodules: none, depth: 0 }
      - get: cf-ops-automation
        params: { submodules: none, depth: 0 }
    - task: generate-update-message
      input_mapping: {boshrelease: zookeeper_boshrelease}
      output_mapping: {message: zookeeper_boshrelease-message}
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: governmentpaas/curl-ssl
            tag: 19d32c252e328a762f75417fcee7cab6dbac9e97
        inputs:
          - name: boshrelease
        outputs:
          - name: message
        run:
          path: sh
          args:
          - -exc
          - |
            MESSAGE_FILE=message/update_notif
            NEW_VERSION=$(cat boshrelease/version)
            RELEASE_URL=$(cat boshrelease/url|sed 's|/d/|/releases/|'|sed 's/?v=/?version=/')
            if [ "${NEW_VERSION}" != "${CURRENT_VERSION}" ]
            then
              echo "New version of zookeeper_boshrelease detected: [${NEW_VERSION}](${RELEASE_URL})." >${MESSAGE_FILE}
              echo "simple-depls is using ${CURRENT_VERSION} of zookeeper_boshrelease" >>${MESSAGE_FILE}
            else
              echo "simple-depls is  running the latest zookeeper_boshrelease (ie [${NEW_VERSION}](${RELEASE_URL}))." >${MESSAGE_FILE}
            fi
      params:
        CURRENT_VERSION: ((releases.zookeeper_boshrelease.version))
    - put: new-version-alert
      params:
        channel: ((slack-channel))
        text_file: zookeeper_boshrelease-message/update_notif
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        username: Concourse
