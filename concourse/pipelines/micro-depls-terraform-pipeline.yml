---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: ((docker-registry-url))cfcommunity/slack-notification-resource

  - name: cron-resource
    type: docker-image
    source:
      repository: ((docker-registry-url))cftoolsmiths/cron-resource

  - name: bosh-config
    type: docker-image
    source:
      repository: ((docker-registry-url))dellemcdojo/bosh-config-resource

resources:


- name: at-noon
  type: cron-resource
  source:
    expression: "0 12 * * 1-5"
    location: "Europe/Paris"
    fire_immediately: true

- name: micro-bosh-runtime-config
  type: bosh-config
  source:
    target: ((bosh-target))
    username: ((bosh-username))
    password: "((bosh-password))"
    type: runtime-config

- name: micro-bosh-cloud-config
  type: bosh-config
  source:
    target: ((bosh-target))
    username: ((bosh-username))
    password: "((bosh-password))"
    type: cloud-config


- name: secrets
  type: git
  source:
    uri: ((secrets-uri))
    branch: ((secrets-branch))
    skip_ssl_verification: true

- name: paas-bootstrap
  type: git
  source:
    uri: ((paas-templates-uri))
    branch: ((paas-templates-branch))
    skip_ssl_verification: true


- name: failure-alert
  type: slack-notification
  source:
    url: ((slack-webhook))
    proxy: ((slack-proxy))
    proxy_https_tunnel: ((slack-proxy-https-tunnel))
    disable: ((slack-disable))

#- name: bosh-stemcell
#  type: bosh-io-stemcell
#  source:
#    name: {{stemcell-name}}

- name: os-conf-release
  type: bosh-io-release
  source:
    repository: ((docker-registry-url))cloudfoundry/os-conf-release

jobs:

- name: update-micro-bosh-cloud-config
  plan:
    - get: secrets
      params: { submodules: none}
    - get: paas-bootstrap
      params: { submodules: none}
    - get: os-conf-release
      version: { version: ((os-conf-version)) }
    - put: micro-bosh-cloud-config
      params:
        manifest: paas-bootstrap/micro-depls/cloud-config.yml
        releases:
          - os-conf-release/release.tgz
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse


- name: update-micro-bosh-runtime-config
  plan:
    - get: paas-bootstrap
      params: { submodules: none}
    - get: os-conf-release
      version: { version: ((os-conf-version)) }
    - put: micro-bosh-runtime-config
      params:
        manifest: paas-bootstrap/micro-depls/runtime-config.yml
        releases:
          - os-conf-release/release.tgz
      on_failure:
        put: failure-alert
        params:
          channel: ((slack-channel))
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse


#- name: setup-micro-depls-terraform
#  plan:
#    - get: at-noon
#      trigger: true
#    - get: secrets
#    - get: paas-bootstrap
#      params: { submodules: [inception/terraform-config/template/bosh-openstack-environment-templates] }
#    - task: generate-terraform-tfvars
#      input_mapping: {scripts-resource: paas-bootstrap, credentials-resource: secrets}
#      output_mapping: {generated-files: terraform-tfvars}
#      file: paas-bootstrap/micro-depls/concourse-micro/tasks/generate-terraform-config.yml
#      params:
#        YML_FILES: |
#          ./credentials-resource/shared/secrets.yml
#          ./credentials-resource/micro-depls/terraform-config/secrets/meta.yml
#          ./credentials-resource/micro-depls/terraform-config/secrets/secrets.yml
#        YML_TEMPLATE_DIR: scripts-resource/micro-depls/terraform-config/template
#        CUSTOM_SCRIPT_DIR: scripts-resource/micro-depls/terraform-config/template
#        SUFFIX: -tpl.tfvars.yml
#      on_failure:
#        put: failure-alert
#        params:
#          channel: {{slack-channel}}
#          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
#          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
#          username: Concourse
#    - task: terraform-apply
#      output_mapping: {generated-files: terraform}
#      config:
#        platform: linux
#        image_resource:
#          type: docker-image
#          source: {repository: hashicorp/terraform, tag: 0.8.7}
#        inputs:
#          - name: paas-bootstrap
#          - name: terraform-tfvars
#          - name: secrets
#        outputs:
#          - name: generated-files
#        run:
#          path: sh
#          args:
#          - -exc
#          - |
#            terraform version
#            cp secrets/${STATE_FILE_DIR}/terraform.tfstate generated-files/terraform.tfstate
#            terraform apply -state=generated-files/terraform.tfstate -var-file=terraform-tfvars/terraform.tfvars.json paas-bootstrap/$SPEC_PATH
#        params:
#          SPEC_PATH: "micro-depls/terraform-config/spec"
#          STATE_FILE_DIR: "micro-depls/terraform-config/secrets"
#      ensure:
#        task: update-terraform-state-file
#        input_mapping: {reference-resource: secrets, generated-resource: terraform}
#        output_mapping: {updated-git-resource: updated-terraform-state-secrets}
#        file: paas-bootstrap/concourse/tasks/git_update_a_file_from_generated.yml
#        params:
#          OLD_FILE: "micro-depls/terraform-config/secrets/terraform.tfstate"
#          NEW_FILE: "terraform.tfstate"
#          COMMIT_MESSAGE: "Terraform micro-depls auto update - [skip ci]"
#        on_failure:
#          put: failure-alert
#          params:
#            channel: {{slack-channel}}
#            text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
#            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
#            username: Concourse
#        on_success:
#          put: secrets
#          get_params: {submodules: none}
#          params:
#            repository: updated-terraform-state-secrets
#            rebase: true



- name: launch-docker-bosh-cli
  plan:
    - get: secrets
    - get: paas-bootstrap
      params: { submodules: [inception/terraform-config/template/bosh-openstack-environment-templates] }
    - task: bosh-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: "((docker-registry-url))orangecloudfoundry/orange-cf-bosh-cli"}
        inputs:
          - name: paas-bootstrap
          - name: secrets
        run:
          path: sh
          args:
          - -exc
          - |
            su - bosh -c "bosh --version"
            spruce --version
            terraform --version
      on_failure:
        put: failure-alert
        params:
          channel: ((slack-channel))
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse
