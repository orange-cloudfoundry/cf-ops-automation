---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

  - name: cron-resource
    type: docker-image
    source:
      repository: cftoolsmiths/cron-test

  - name: bosh-config
    type: docker-image
    source:
      repository: dellemcdojo/bosh-config-resource

resources:


- name: at-noon
  type: cron-resource
  source:
    expression: "15 12 * * 1-5"
    location: "Europe/Paris"
    fire_immediately: true

#- name: secrets
#  type: git
#  source:
#    uri: {{pipeline-credentials-uri}}
#    branch: master
#    skip_ssl_verification: true

- name: paas-template
  type: git
  source:
    uri: {{paas-templates-uri}}
    branch: master
    skip_ssl_verification: true

- name: paas-repo
  type: git
  source:
    uri: {{paas-repo-uri}}
    branch: master
    skip_ssl_verification: true

- name: failure-alert
  type: slack-notification
  source:
    url: {{slack-webhook}}

- name: bosh-stemcell
  type: bosh-io-stemcell
  source:
    name: {{stemcell-name}}

<% require 'yaml' %>

<% all_dependencies.each do |name,boshrelease| %>
- name: secrets-<%= name %>
  type: git
  source:
    uri: {{pipeline-credentials-uri}}
    path: ["<%= depls %>/<%= name %>","shared"]
    branch: master
    skip_ssl_verification: true

- name: paas-template-<%= name %>
  type: git
  source:
    uri: {{paas-templates-uri}}
    path: ["<%= depls %>/<%= name %>"]
    branch: master
    skip_ssl_verification: true

- name: deploy-<%= name %>
  type: bosh-deployment
  source:
    target: {{bosh-target}}
    username: {{bosh-username}}
    password: {{bosh-password}}
    deployment: <%= name %>
<% end %>

<% uniq_releases= {} %>
<% all_dependencies.each do |name,boshrelease| %>
<% boshrelease["releases"].each do |release, info|  %>
<% uniq_releases[release]= info %>
<% end %>
<% end %>

<% uniq_releases.each do |release, info|  %>
- name: <%= release %>
  <% if info["base_location"].include?("bosh.io") %>
  type: bosh-io-release
  source:
    repository: <%= info["repository"] %>
  <% else %>
  type: github-release
  source:
    user: <%= info["repository"].split('/').first %>
    repository: <%= info["repository"].split('/').last %>
  <% end %>
<% end %>


jobs:

- name: execute-deploy-script
  plan:
    - get: at-noon
      trigger: true
    - get: paas-repo
      params: { submodules: none}
    - get: paas-template
      params: { submodules: none}
    - task: run-deploy.sh
      input_mapping: {script-resource: paas-template}
      file: paas-template/concourse/tasks/execute_deploy_script.yml
      params:
        SCRIPT_LOCATION: <%= depls %>
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse

<% all_dependencies.each do |name,boshrelease| %>

- name: deploy-<%= name %>
  plan:
    - aggregate:
      - get: bosh-stemcell
        version: { version: {{stemcell-version}} }
        trigger: true
      <% boshrelease["releases"].each do |release, info| %>
      - get: <%= release %>
        <% if info["base_location"].include?("bosh.io") %>
        version: { version: {{<%= release %>-version}} }
        <% else %>
        version: { tag: v{{<%= release %>-version}} }
        <% end %>
        trigger: true
      <% end %>
      - get: secrets-<%= name %>
        params: { submodules: none}
        trigger: true
      - get: paas-template-<%= name %>
        trigger: true
        params: { submodules: none}
    - task: generate-<%= name %>-manifest
      input_mapping: {scripts-resource: paas-template-<%= name %>, credentials-resource: secrets-<%= name %>, additional-resource: secrets-<%= name %>}
      output_mapping: {generated-files: release-manifest}
      file: paas-template-<%= name %>/concourse/tasks/generate-manifest.yml
      params:
        SPRUCE_FILE_BASE_PATH: credentials-resource/<%= depls %>/<%= name %>/
        YML_TEMPLATE_DIR: scripts-resource/<%= depls %>/<%= name %>/template
        YML_FILES: |
            ./credentials-resource/<%= depls %>/<%= name %>/secrets/meta.yml
            ./credentials-resource/<%= depls %>/<%= name %>/secrets/secrets.yml
            ./credentials-resource/shared/secrets.yml
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse
    - put: deploy-<%= name %>
      params:
        manifest: release-manifest/<%= name %>.yml
        stemcells:
        - bosh-stemcell/stemcell.tgz
        releases:
        <% boshrelease["releases"].each do |release, info| %>
        - <%= release %>/release.tgz
        <% end %>
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse
    - task: update-<%= name %>-files
      input_mapping: {reference-resource: secrets-<%= name %>, generated-resource: deploy-<%= name %>}
      output_mapping: {updated-git-resource: updated-<%= name %>-secrets}
      file: paas-template-<%= name %>/concourse/tasks/git_update_a_file_from_generated.yml
      params:
        OLD_FILE: <%= depls %>/<%= name %>/<%= name %>.yml
        NEW_FILE: "manifest.yml"
        COMMIT_MESSAGE: "<%= name %> generated manifest auto update - [skip ci]"
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse
    - put: secrets-<%= name %>
      get_params: {submodules: none}
      params:
        - repository: updated-<%= name %>-secrets
        - rebase: true

<% end %>
