---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

  - name: cron-resource
    type: docker-image
    source:
      repository: cftoolsmiths/cron-test

  - name: bosh-config
    type: docker-image
    source:
      repository: dellemcdojo/bosh-config-resource

resources:

- name: at-noon
  type: cron-resource
  source:
    expression: "15 12 * * 1-5"
    location: "Europe/Paris"
    fire_immediately: true

- name: failure-alert
  type: slack-notification
  source:
    url: {{slack-webhook}}

- name: bosh-stemcell
  type: bosh-io-stemcell
  source:
    name: {{stemcell-name}}


- name: secrets-<%=depls %>
  type: git
  source:
    uri: {{pipeline-credentials-uri}}
    paths: ["<%= depls %>/secrets","shared"]
    branch: master
    skip_ssl_verification: true
- name: paas-template-<%=depls %>
  type: git
  source:
    uri: {{paas-templates-uri}}
    paths: ["<%= depls %>/template","concourse/tasks","scripts"]
    branch: master
    skip_ssl_verification: true


<% all_dependencies.each do |name,boshrelease| %>
- name: secrets-<%= name %>
  type: git
  source:
    uri: {{pipeline-credentials-uri}}
    <% ext_scan_path = boshrelease["resources"]["secrets"]["extended_scan_path"] if ( boshrelease["resources"] && boshrelease["resources"]["secrets"]["extended_scan_path"] ) %>
    <% ext_scan_path_value = ",\"#{ext_scan_path.join('","')}\"" if ext_scan_path %>
    paths: ["<%= depls %>/<%= name %>","shared"<%= ext_scan_path_value || ""%>]
    branch: master
    skip_ssl_verification: true

- name: paas-template-<%= name %>
  type: git
  source:
    uri: {{paas-templates-uri}}
    paths: ["<%= depls %>/<%= name %>","concourse/tasks","scripts"]
    branch: master
    skip_ssl_verification: true

- name: deploy-<%= name %>
  type: bosh-deployment
  source:
    target: {{bosh-target}}
    username: {{bosh-username}}
    password: {{bosh-password}}
    deployment: <%= name %>
<% end %>

<% uniq_releases= {} %>
<% all_dependencies.each do |name,boshrelease| %>
<% boshrelease["releases"].each do |release, info|  %>
<% uniq_releases[release]= info %>
<% end %>
<% end %>

<% uniq_releases.each do |release, info|  %>
- name: <%= release %>
  <% if info["base_location"].include?("bosh.io") %>
  type: bosh-io-release
  source:
    repository: <%= info["repository"] %>
  <% else %>
  type: github-release
  source:
    user: <%= info["repository"].split('/').first %>
    repository: <%= info["repository"].split('/').last %>
  <% end %>
<% end %>


jobs:

- name: execute-deploy-script
  plan:
    - get: at-noon
      trigger: true
    - get: secrets-<%= depls %>
      params: { submodules: none}
    - get: paas-template-<%= depls %>
      params: { submodules: none}
    - task: run-deploy.sh
      input_mapping: {script-resource: paas-template-<%= depls %>, secrets: secrets-<%= depls %>}
      file: paas-template-<%= depls %>/concourse/tasks/execute_deploy_script.yml
      params:
        CURRENT_DEPLS: <%= depls %>/template
        COMMON_SCRIPT_DIR: script-resource/scripts
        SECRETS_DIR: secrets
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse

- name: cloud-config-and-runtime-config-for-<%= depls %>
  plan:
    - get: secrets-<%=depls %>
      params: { submodules: none}
      trigger: true
    - get: paas-template-<%=depls %>
      params: { submodules: none}
      trigger: true


#    - task: generate-<%= depls %>-terraform-outputs-cloud-config
#      input_mapping: {scripts-resource: paas-template, credentials-resource: secrets-<%=depls %>, additional-resource: terraform-outputs}
#      output_mapping: {generated-files: cloud-config-manifest}
#      file: paas-template/concourse/tasks/extract_terraform_outputs.yml
#      params:
#        STATE_FILE: "state-file-resource/terraform.tfstate"
#        OUTPUT_FILE: "result-dir/bosh.terraform-outputs.yml"
#
#        SPRUCE_FILE_BASE_PATH: credentials-resource/<%= depls %>/
#        YML_TEMPLATE_DIR: scripts-resource/<%= depls %>/template
#        YML_FILES: |
#            ./credentials-resource/<%= depls %>/secrets/meta.yml
#            ./credentials-resource/<%= depls %>/secrets/secrets.yml
#            ./credentials-resource/shared/secrets.yml
#        CUSTOM_SCRIPT_DIR: scripts-resource/<%= depls %>/template

    - task: generate-<%= depls %>-all-config
      input_mapping: {scripts-resource: paas-template-<%=depls %>, credentials-resource: secrets-<%=depls %>, additional-resource: secrets-<%=depls %>}
      output_mapping: {generated-files: config-manifest}
      file: paas-template-<%=depls %>/concourse/tasks/generate-manifest.yml
      params:
        SPRUCE_FILE_BASE_PATH: credentials-resource/<%= depls %>/
        YML_TEMPLATE_DIR: scripts-resource/<%= depls %>/template
        YML_FILES: |
            ./credentials-resource/<%= depls %>/secrets/meta.yml
            ./credentials-resource/<%= depls %>/secrets/secrets.yml
            ./credentials-resource/shared/secrets.yml
        CUSTOM_SCRIPT_DIR: scripts-resource/<%= depls %>/template

    - aggregate:
      - task: update-cloud-config-for-<%= depls %>
        attempts: 3
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/bosh-cli
          inputs:
            - name: config-manifest
            - name: secrets-<%=depls %>
            - name: paas-template-<%=depls %>
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ./paas-template-<%=depls %>/scripts/bosh_login.sh {{bosh-target}} {{bosh-username}} {{bosh-password}}
                OLD_CONFIG=$(mktemp cloud-config-XXXXXX)
                bosh cloud-config >$OLD_CONFIG
                diff $OLD_CONFIG config-manifest/cloud-config.yml || true
                bosh update cloud-config config-manifest/cloud-config.yml
        ensure:
          task: update-cloud-config
          input_mapping: {reference-resource: secrets-<%=depls %>, generated-resource: config-manifest}
          output_mapping: {updated-git-resource: updated-cloud-config}
          file: paas-template-<%=depls %>/concourse/tasks/git_update_a_file_from_generated.yml
          params:
            OLD_FILE: "<%=depls %>/cloud-config.yml"
            NEW_FILE: "cloud-config.yml"
            COMMIT_MESSAGE: "<%=depls %> cloud-config auto update - [skip ci]"
          on_failure:
            put: failure-alert
            params:
              channel: {{slack-channel}}
              text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
              icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
              username: Concourse
          on_success:
            put: secrets-<%=depls %>
            get_params: {submodules: none}
            params:
              - repository: updated-cloud-config
              - rebase: true

      - task: update-runtime-config-for-<%= depls %>
        attempts: 3
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/bosh-cli
          inputs:
            - name: config-manifest
            - name: secrets-<%=depls %>
            - name: paas-template-<%=depls %>
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                ./paas-template-<%=depls %>/scripts/bosh_login.sh {{bosh-target}} {{bosh-username}} {{bosh-password}}
                cat config-manifest/runtime-config.yml
                OLD_CONFIG=$(mktemp runtime-config-XXXXXX)
                bosh runtime-config >$OLD_CONFIG
                diff $OLD_CONFIG config-manifest/runtime-config.yml || true
                bosh update runtime-config config-manifest/runtime-config.yml
        ensure:
          task: update-runtime-config
          input_mapping: {reference-resource: secrets-<%=depls %>, generated-resource: config-manifest}
          output_mapping: {updated-git-resource: updated-runtime-config}
          file: paas-template-<%=depls %>/concourse/tasks/git_update_a_file_from_generated.yml
          params:
            OLD_FILE: "<%=depls %>/runtime-config.yml"
            NEW_FILE: "runtime-config.yml"
            COMMIT_MESSAGE: "<%=depls %> runtime-config auto update - [skip ci]"
          on_failure:
            put: failure-alert
            params:
              channel: {{slack-channel}}
              text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
              icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
              username: Concourse
          on_success:
            put: secrets-<%=depls %>
            get_params: {submodules: none}
            params:
              - repository: updated-runtime-config
              - rebase: true


<% all_dependencies.each do |name,boshrelease| %>

- name: deploy-<%= name %>
  plan:
    - aggregate:
      - get: bosh-stemcell
        version: { version: {{stemcell-version}} }
        trigger: true
        attempts: 3
      <% boshrelease["releases"].each do |release, info| %>
      - get: <%= release %>
        <% if info["base_location"].include?("bosh.io") %>
        version: { version: {{<%= release %>-version}} }
        <% else %>
        version: { tag: v{{<%= release %>-version}} }
        <% end %>
        trigger: true
        attempts: 3
      <% end %>
      - get: secrets-<%= name %>
        params: { submodules: none}
        trigger: true
      - get: paas-template-<%= name %>
        trigger: true
        <% current_git_submodule = git_submodules[depls][name] if git_submodules[depls] %>
        params: { submodules: <%= current_git_submodule || "none" %>}
    - task: generate-<%= name %>-manifest
      input_mapping: {scripts-resource: paas-template-<%= name %>, credentials-resource: secrets-<%= name %>, additional-resource: secrets-<%= name %>}
      output_mapping: {generated-files: release-manifest}
      file: paas-template-<%= name %>/concourse/tasks/generate-manifest.yml
      params:
        SPRUCE_FILE_BASE_PATH: credentials-resource/<%= depls %>/<%= name %>/
        YML_TEMPLATE_DIR: scripts-resource/<%= depls %>/<%= name %>/template
        YML_FILES: |
            ./credentials-resource/<%= depls %>/<%= name %>/secrets/meta.yml
            ./credentials-resource/<%= depls %>/<%= name %>/secrets/secrets.yml
            ./credentials-resource/shared/secrets.yml
        CUSTOM_SCRIPT_DIR: scripts-resource/<%= depls %>/<%= name %>/template
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse
    - task: execute-<%= name %>-spiff-pre-bosh-deploy
      input_mapping: {scripts-resource: paas-template-<%= name %>, credentials-resource: secrets-<%= name %>, additional-resource: release-manifest}
      output_mapping: {generated-files: final-release-manifest}
      file: paas-template-<%= name %>/concourse/tasks/spiff_pre_bosh_deploy.yml
      params:
        CUSTOM_SCRIPT_DIR: scripts-resource/<%= depls %>/<%= name %>/template
        SECRETS_DIR: credentials-resource/<%= depls %>/<%= name %>
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed cannot spiff manifest [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse
    - put: deploy-<%= name %>
      attempts: 3
      params:
        manifest: final-release-manifest/<%= name %>.yml
        stemcells:
        - bosh-stemcell/stemcell.tgz
        releases: <%= "[]" if boshrelease["releases"].empty? %>
        <% boshrelease["releases"].each do |release, info| %>
        - <%= release %>/release.tgz
        <% end %>
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse
    - task: update-<%= name %>-files
      input_mapping: {reference-resource: secrets-<%= name %>, generated-resource: deploy-<%= name %>}
      output_mapping: {updated-git-resource: updated-<%= name %>-secrets}
      file: paas-template-<%= name %>/concourse/tasks/git_update_a_file_from_generated.yml
      params:
        OLD_FILE: <%= depls %>/<%= name %>/<%= name %>.yml
        NEW_FILE: "manifest.yml"
        COMMIT_MESSAGE: "<%= name %> generated manifest auto update - [skip ci]"
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed cannot push master [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse
    - put: secrets-<%= name %>
      get_params: {submodules: none}
      params:
        - repository: updated-<%= name %>-secrets
        - rebase: true

<% end %>
