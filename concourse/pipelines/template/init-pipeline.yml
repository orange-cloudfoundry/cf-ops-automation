---
resource_types:
  - name: concourse-pipeline
    type: docker-image
    source:
      repository: robdimsdale/concourse-pipeline-resource
      tag: latest-final

  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

resources:

- name: failure-alert
  type: slack-notification
  source:
    url: {{slack-webhook}}
    ca_certs:
    - domain: {{slack-custom-domain}}
      cert: {{slack-custom-cert}}
    - domain: {{slack-custom-root-domain}}
      cert: {{slack-custom-root-cert}}

<% if ! all_ci_deployments.empty? %>
- name: <%= all_ci_deployments[depls]["target_name"] %>
  type: concourse-pipeline
  source:
    target: {{concourse-<%= depls %>-target}}
    insecure: {{concourse-<%= depls %>-insecure}}
    teams:
    - name: main
      username: {{concourse-<%= depls %>-username}}
      password: {{concourse-<%= depls %>-password}}

- name: secrets-complete
  type: git
  source:
    uri: {{pipeline-credentials-uri}}
    branch: master
    skip_ssl_verification: true

- name: paas-templates-complete
  type: git
  source:
    uri: {{paas-templates-uri}}
    branch: master
    skip_ssl_verification: true
<% end %>

jobs:

<% if ! all_ci_deployments.empty? %>
<% pipeline_name="#{depls}-init-generated" %>

#<% if all_ci_deployments[depls]["pipelines"][pipeline_name] != nil %>
#
#- name: auto-update-<%= "#{depls}-init-generated" %>
#  plan:
#  - aggregate:
#    - get: paas-templates-complete
#      params: { submodules: none}
#      trigger: true
#      attempts: 3
#    - get: secrets-complete
#      params: { submodules: none}
#      trigger: false
#      attempts: 3
#  - put: <%= all_ci_deployments[depls]["target_name"] %>
#    params:
#      pipelines:
#      <% pipeline_details=all_ci_deployments[depls]["pipelines"][pipeline_name] %>
#      - name: <%= pipeline_name %>
#        team: main
#        config_file: concourse-<%= depls %>-pipeline/concourse/pipelines/<%= pipeline_name %>.yml
#        vars_files:
#          <% pipeline_details["vars_files"].each do |a_vars_file| %>
#          # trick to manage <depls>-versions.yml (not included in secrets)
#         <%= "- secrets-complete/#{a_vars_file}" if ! a_vars_file.end_with?("-versions.yml") %>
#         <%= "- paas-template-complete/#{a_vars_file}" if a_vars_file.end_with?("-versions.yml") %>
#          <% end %>
#<% end %>

- name: update-pipeline-<%= depls %>
  plan:
  - aggregate:
    - get: paas-templates-complete
      params: { submodules: none}
#      <%= "passed: [auto-update-#{depls}-init-generated]" if all_ci_deployments[depls]["pipelines"][pipeline_name] != nil %>
      attempts: 3
      trigger: false
    - get: secrets-complete
      params: { submodules: none}
#      <%= "passed: [auto-update-#{depls}-init-generated]" if all_ci_deployments[depls]["pipelines"][pipeline_name] != nil %>
      attempts: 3
      trigger: false
  - task: generate-<%= depls %>-pipelines
    input_mapping: {script-resource: paas-templates-complete,secrets: secrets-complete}
    output_mapping: {result-dir: concourse-<%= depls %>-pipeline}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ruby, tag: 2.3.1-slim}
      inputs:
        - name: script-resource
        - name: secrets
      outputs:
        - name: result-dir
      run:
        path: sh
        args:
        - -exc
        - |
          cp -r script-resource/. result-dir
          cp -rf secrets/. result-dir
          cd result-dir/concourse
          ./generate-depls.rb --depls <%= depls %> -s ../../script-resource
    on_failure:
      put: failure-alert
      params:
        channel: {{slack-channel}}
        text: Failed [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        username: Concourse

  - put: <%= all_ci_deployments[depls]["target_name"] %>
    params:
      pipelines:
      <% all_ci_deployments[depls]["pipelines"].each do |pipeline_name,pipeline_details| %>
      - name: <%= pipeline_name %>
        team: main
        config_file: concourse-<%= depls %>-pipeline/concourse/pipelines/<%= pipeline_name %>.yml
        vars_files:
          <% pipeline_details["vars_files"].each do |a_vars_file| %>
          # trick to manage <depls>-versions.yml (not included in secrets)
         <%= "- secrets-complete/#{a_vars_file}" if ! a_vars_file.end_with?("-versions.yml") %>
         <%= "- paas-templates-complete/#{a_vars_file}" if a_vars_file.end_with?("-versions.yml") %>
          <% end %>
     <% end %>
    on_failure:
      put: failure-alert
      params:
        channel: {{slack-channel}}
        icon_url: https://pbs.twimg.com/profile_images/714899641628753920/3C8UrVPf.jpg
        text: |
          ![failed](https://rawgit.com/orange-cloudfoundry/travis-resource/master/ci/images/concourse-red.png) Failed to deploy [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
        username: Concourse
<% end %>

