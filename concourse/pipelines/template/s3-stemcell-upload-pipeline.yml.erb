---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: ((docker-registry-url))cfcommunity/slack-notification-resource
      tag: v1.4.2

  - name: cron-resource
    type: docker-image
    source:
      repository: ((docker-registry-url))cftoolsmiths/cron-resource
      # use latest as no other recent tag available

resources:
- name: weekday-morning
  type: cron-resource
  source:
    expression: 50 8 * * 1-5
    location: "Europe/Paris"
    fire_immediately: true

- name: failure-alert
  type: slack-notification
  source:
    url: ((slack-webhook))
    proxy: ((slack-proxy))
    proxy_https_tunnel: ((slack-proxy-https-tunnel))
    disable: ((slack-disable))

- name: cf-ops-automation
  type: git
  source:
    uri: ((cf-ops-automation-uri))
    branch: ((cf-ops-automation-branch))
    tag_filter: ((cf-ops-automation-tag-filter))
    skip_ssl_verification: true

<% uniq_stemcells= {} %>
<% all_dependencies.sort.each do |name, boshrelease| %>
<% boshrelease["stemcells"]&.each do |stemcell, info|  %>
<% uniq_stemcells[stemcell]= info %>
<% end %>
<% end %>

<% uniq_stemcells.sort.each do |stemcell, info|  %>
- name: <%= stemcell %>
  type: bosh-io-stemcell
  source:
    name: <%= stemcell %>

- name: <%= stemcell %>-s3
  type: s3
  source:
    bucket: ((s3-stemcell-bucket))
    region_name: ((s3-stemcell-region-name))
    # customization is required to remove bosh prefix in stemcell name
    regexp: <%= stemcell %>/bosh-stemcell-(.*)-<%= stemcell.sub('bosh-','') %>.tgz
    access_key_id: ((s3-stemcell-access-key-id))
    secret_access_key: ((s3-stemcell-secret-key))
    endpoint: ((s3-stemcell-endpoint))
    skip_ssl_verification: ((s3-stemcell-skip-ssl-verification))
<% end %>

jobs:

- name: init-concourse-stemcells-for-<%= depls %>
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
  - aggregate:
    - get: cf-ops-automation
      params: { submodules: none}
      attempts: 2
    - get: weekday-morning
      trigger: true
  - task: generate-<%= depls %>-flight-plan
    output_mapping: {result-dir: init-<%= depls %>-plan}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((docker-registry-url))concourse/busyboxplus
          tag: "git"
      outputs:
        - name: result-dir
      run:
        path: sh
        args:
        - -exc
        - |
          <% uniq_stemcells.sort.each do |name,_| %>
          echo "check-resource -r $BUILD_PIPELINE_NAME/<%= name %> --from version:((stemcell-version))" >> result-dir/flight-plan
          <% end %>
      params:
        BUILD_PIPELINE_NAME: <%= depls %>-s3-stemcell-upload-generated

  <% current_team = CiDeployment.team(all_ci_deployments, depls, "#{depls}-s3-br-upload-generated") %>
  - task: fly-into-concourse
    input_mapping: {fly-cmd: init-<%= depls %>-plan}
    output_mapping: {flight-report: concourse-<%= depls %>-init-report}
    file: cf-ops-automation/concourse/tasks/fly_execute_commands.yml
    params:
      ATC_EXTERNAL_URL: ((concourse-<%= depls %>-target))
      FLY_USERNAME: ((concourse-<%= depls %>-username))
      FLY_PASSWORD: "((concourse-<%= depls %>-password))"
      FLY_TEAM: <%= current_team || 'main' %>

<% uniq_stemcells.sort.each do |stemcell, _|  %>
- name: upload-current-<%= stemcell %>
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - aggregate:
      - get: <%= stemcell %>
        attempts: 2
        version: {version: ((stemcell-version))}
        trigger: true
        params: {tarball: true, preserve_filename: true}
      - get: cf-ops-automation
        params: { submodules: none}
        attempts: 2
        passed: [ init-concourse-stemcells-for-<%= depls %> ]
    - put: <%= stemcell %>-s3
      params:
        file: <%= stemcell %>/*.tgz
        acl: public-read

- name: upload-lastest-<%= stemcell %>
  on_failure:
    put: failure-alert
    params:
      channel: ((slack-channel))
      text: Failed [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - aggregate:
      - get: <%= stemcell %>
        attempts: 2
        version: every
        trigger: true
        params: {tarball: true, preserve_filename: true}
      - get: cf-ops-automation
        params: { submodules: none}
        attempts: 2
        passed: [ upload-current-<%= stemcell %> ]
    - put: <%= stemcell %>-s3
      params:
        file: <%= stemcell %>/*.tgz
        acl: public-read
<% end %>
