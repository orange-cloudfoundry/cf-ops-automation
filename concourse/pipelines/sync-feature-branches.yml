---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

  - name: git-branch-heads
    type: docker-image
    source: {repository: orangecloudfoundry/git-branch-heads-resource}

resources:

- name: failure-alert
  type: slack-notification
  source:
    url: {{slack-webhook}}
    ca_certs:
    - domain: {{slack-custom-domain}}
      cert: {{slack-custom-cert}}
    - domain: {{slack-custom-root-domain}}
      cert: {{slack-custom-root-cert}}

- name: features-or-wip-merged
  type: git
  source:
    uri: {{paas-templates-uri}}
    branch: {{paas-templates-merged-branch}}
    skip_ssl_verification: true

- name: paas-templates-reference
  type: git
  source:
    uri: {{paas-templates-uri}}
    branch: {{paas-templates-reference-branch}}
    skip_ssl_verification: true

- name: paas-templates-features
  type: git-branch-heads
  source:
    uri: {{paas-templates-uri}}
    branches: [develop, WIP-*,wip-*,feature-*, Feature-*]
    skip_ssl_verification: true

- name: cf-ops-automation
  type: git
  source:
    uri: {{cf-ops-automation-uri}}
    branch: {{cf-ops-automation-branch}}
    tag_filter: {{cf-ops-automation-tag-filter}}
    skip_ssl_verification: true

jobs:

- name: update-merged-wip-features
  serial_groups: [git]
  plan:
    - aggregate:
      - get: features-or-wip-merged
        params: { submodules: none}
      - get: paas-templates-features
        params: { submodules: none}
        trigger: true
        version: every
    - put: features-or-wip-merged
      get_params: {submodules: none}
      params:
        repository: paas-templates-features
        rebase: true
      on_failure:
        put: failure-alert
        params:
          channel: {{slack-channel}}
          text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          username: Concourse

- name: reset-merged-wip-features
  serial_groups: [git]
  on_failure:
    put: failure-alert
    params:
      channel: {{slack-channel}}
      text: Failed to run [[$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME ($BUILD_NAME)]($ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)].
      icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
      username: Concourse
  plan:
    - aggregate:
      - get: features-or-wip-merged
        params: { submodules: none}
      - get: paas-templates-reference
        params: { submodules: none}
      - get: cf-ops-automation
        params: { submodules: none}
    - task: reset-wip
      file: cf-ops-automation/concourse/tasks/git_reset_wip.yml
      input_mapping: {reference-resource: paas-templates-reference}
      output_mapping: {updated-git-resource: paas-templates-features-reseted}

#      config:
#        platform: linux
#        image_resource:
#          type: docker-image
#          source: {repository: concourse/busyboxplus, tag: "git"}
#        inputs:
#          - name: reference-resource
#        outputs:
#          - name: updated-git-resource
#        run:
#          path: sh
#          args:
#          - -exc
#          - |
#            git config --global user.email "$GIT_USER_EMAIL"
#            git config --global user.name "$GIT_USER_NAME"
#
#            FINAL_RELEASE_REPO=updated-git-resource
#
#            if [ "$SKIP_SSL_VERIFICATION" = "true" ]; then
#              export GIT_SSL_NO_VERIFY=true
#            fi
#
#            cd reference-resource
#            URI=$(git remote get-url origin)
#
#            current_heads=$(git ls-remote -h "$URI" $GIT_BRANCH_FILTER | sed 's/refs\/heads\///' | awk '{print $2, $1}' | sort)
#            cd ..
#
#            git clone $URI ${FINAL_RELEASE_REPO}
#            cd ${FINAL_RELEASE_REPO}
#            git checkout -b develop -t origin/develop
#
#            git_br=$(echo $current_heads |awk '{ for (i=2;i<=NF;i+=2) $i=""; print}' )
#
#            for i in $git_br; do echo "Processing $i";git merge -m "Merge branch '$i' after WIP reset" origin/$i ;done

      params:
        GIT_USER_NAME: "Orange Cloud Foundry SKC CI Server"
        GIT_USER_EMAIL: "codex.clara-cloud-ops@orange.com"
        GIT_BRANCH_FILTER: WIP-* wip-* feature-* Feature-*
        SKIP_SSL_VERIFICATION: true
            #for i in $git_br; do git checkout -b $i -t origin/$i ;done
#            git_id=$(echo $current_heads |awk '{ for (i=1;i<=NF;i+=2) $i=""; print}' )


#    - put: features-or-wip-merged
#      get_params: {submodules: none}
#      params:
#        repository: paas-templates-features-reseted
#        force: true
