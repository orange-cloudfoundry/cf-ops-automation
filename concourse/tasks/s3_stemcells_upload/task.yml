---
#
# Copyright (C) 2015-2020 Orange
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

platform: linux
image_resource:
  type: registry-image
  source:
    repository: elpaasoci/awscli
    tag: 4966e7c4847f39a6f349536c3a4f993b377e60c5
inputs:
  - name: templates-resource
outputs:
  - name: logs-dir
  - name: stemcell
run:
  path: sh
  args:
    - -c
    - |
      export AWS_DEFAULT_REGION=$REGION_NAME
      export AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID
      export AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY
      AWS_OPTIONS="--endpoint-url $ENDPOINT ${AWS_OPTIONS}"
      if [ $SKIP_SSL_VERIFICATION = true ];then
        AWS_OPTIONS="--no-verify-ssl ${AWS_OPTIONS}"
      fi
      aws configure set default.s3.signature_version $S3_API_VERSION

      cat >script.py <<EOF
      import yaml
      import os
      version_file_env=os.getenv('VERSIONS_FILE')
      versions_file=open(version_file_env)
      loaded_file=yaml.load(versions_file, Loader=yaml.FullLoader)
      version=loaded_file.get('stemcell',{}).get('version')
      if version:
        print(version)
      EOF

      echo "Extracting stemcell version from $VERSIONS_FILE"
      STEMCELL_VERSION=$(python3 script.py)
      if [ -z "$STEMCELL_VERSION" ]; then
        echo "ERROR: failed to extract version from $VERSIONS_FILE"
        exit 1
      else
        echo "Stemcell version found: $STEMCELL_VERSION"
      fi

      STEMCELL_URL="${STEMCELL_BASE_LOCATION}/${STEMCELL_PREFIX}${STEMCELL_MAIN_NAME}?v=$STEMCELL_VERSION"
      S3_NAMESPACE="${STEMCELL_PREFIX}${STEMCELL_MAIN_NAME}"
      TGZ_NAME="${STEMCELL_PREFIX}stemcell-$STEMCELL_VERSION-$STEMCELL_MAIN_NAME.tgz"

      aws ${AWS_OPTIONS} s3 ls --recursive ${BUCKET}/${S3_NAMESPACE} 2>/dev/null >s3-files.txt
      echo "Bucket (${BUCKET}) content:"
      cat s3-files.txt

      echo "Processing stemcell ${TGZ_NAME}, version <${STEMCELL_VERSION}> -  Extracted S3 upload dir: $S3_NAMESPACE"
      s3_release_count=$(grep "$TGZ_NAME" s3-files.txt|wc -l)
      if [ ${s3_release_count} -eq 0 ]; then
        mkdir -p stemcell
        echo "Downloading ${TGZ_NAME%.tgz} from <$STEMCELL_URL>"
        curl -SsL "$STEMCELL_URL" > stemcell/${TGZ_NAME}
        echo "Uploading to ${TGZ_NAME} to <${BUCKET}/${S3_ENDPOINT}>"
        aws ${AWS_OPTIONS} s3 cp "stemcell/${TGZ_NAME}" "s3://${BUCKET}/${S3_NAMESPACE}/"
      else
        echo "Skipping upload, ${TGZ_NAME} already exists"
      fi

      exit_code=$?
      exit ${exit_code}
params:
  S3_API_VERSION: s3v4
  BUCKET:
  ENDPOINT:
  REGION_NAME: us-west-1
  ACCESS_KEY_ID:
  SECRET_ACCESS_KEY:
  SKIP_SSL_VERIFICATION:
  STEMCELL_VERSION:
  STEMCELL_PREFIX:
  STEMCELL_MAIN_NAME:
  STEMCELL_BASE_LOCATION: https://bosh.io/d/stemcells/
  VERSIONS_FILE:
