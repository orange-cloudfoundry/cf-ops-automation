---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

  - name: pull-request
    type: docker-image
    source:
      repository: jtarchie/pr

resources:
- name: cf-ops-automation-docker-image
  type: docker-image
  source:
    repository: orangecloudfoundry/cf-ops-automation
    username: ((dockerhub-username))
    password: ((dockerhub-password))


- name: version
  type: semver
  source:
    driver: git
    uri: ((cf-ops-automation-git-uri))
    username: ((cf-ops-automation-git-username))
    password: ((cf-ops-automation-git-password))
    branch: version
    initial_version: 1.3.1
    file: version

- name: ci-develop
  type: git
  source:
    uri: ((cf-ops-automation-git-uri))
    username: ((cf-ops-automation-git-username))
    password: ((cf-ops-automation-git-password))
    branch: ((cf-ops-automation-git-branch))
    skip_ssl_verification: ((cf-ops-automation-git-insecure))

- name: ci-master
  type: git
  source:
    uri: ((cf-ops-automation-git-uri))
    username: ((cf-ops-automation-git-username))
    password: ((cf-ops-automation-git-password))
    branch: master
    skip_ssl_verification: ((cf-ops-automation-git-insecure))

- name: PR-develop
  type: pull-request
  source:
    repo: ((cf-ops-automation-git-hub-repository))
    username: ((cf-ops-automation-git-username))
    password: ((cf-ops-automation-git-password))
    access_token: ((cf-ops-automation-git-hub-token))
    base: develop
    skip_ssl_verification: ((cf-ops-automation-git-insecure))


- name: cf-ops-automation-dependencies
  type: git
  source:
    uri: ((cf-ops-automation-git-uri))
    branch: ((cf-ops-automation-git-branch))
    skip_ssl_verification: ((cf-ops-automation-git-insecure))
    paths: [ "Gemfile*", "Dockerfile" ]



jobs:

- name: build-cached-image
  plan:
#  - get: cf-ops-automation
  - get: cf-ops-automation-dependencies
    trigger: true
  - put: cf-ops-automation-docker-image
    params:
      build: cf-ops-automation-dependencies
      build_args: &docker_build_args
        CONCOURSE_VERSION: 3.4.1
        CONCOURSE_SHA: 7259f5dc26dba6b10bc515f7fae2ccf559579e61320f071656a6444806260289


- name: test
  plan:
  - aggregate:
    - get: cf-ops-automation-docker-image
      passed: [build-cached-image]
      trigger: true
    - get: cf-ops-automation
      resource: ci-develop
      trigger: true
#    passed: [build-cached-image]
    trigger: true
  - task: run-tests
    config: &test_config
      image_resource:
        type: docker-image
        source: {repository: cf-ops-automation-docker-image}
      platform: linux
      inputs:
      - name: cf-ops-automation
      run:
        dir: cf-ops-automation
        path: /bin/bash
        args:
        - -ce
        - |
          fly -t cf-ops-automation login -u ((concourse-username)) -p ((concourse-password)) -k -c ((concourse-url))
          bundle exec rspec

- name: merge-to-master
  serial: true
  plan:
    - aggregate:
      - get: ci-master
      - get: cf-ops-automation
        resource: ci-develop
        trigger: true
        passed: [test]
    - put: ci-master
      params:
        repository: cf-ops-automation


- name: build-PR-cached-image
  plan:
    - get: PR-develop
      trigger: true
      version: every

    - put: PR-develop
      params:
        path: PR-develop
        status: pending

    - put: cf-ops-automation-docker-image
      params:
        build: PR-develop
        tag: PR-develop/.git/id
        tag_prefix: PR-
        build_args: *docker_build_args

- name: test-PR-develop
  plan:
    - aggregate:
      - get: cf-ops-automation-docker-image
        passed: [build-PR-cached-image]
        trigger: true
      - get: cf-ops-automation
        resource: PR-develop
        trigger: true
        version: every
        passed: [build-PR-cached-image]

    - task: test-pr
      config: *test_config
      on_success:
        put: PR-develop
        params:
          path: cf-ops-automation
          status: success
      on_failure:
        put: PR-develop
        params:
          path: cf-ops-automation
          status: failure


- name: major
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/version}

- name: minor
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/version}

- name: patch
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: patch, pre: rc}
  - put: version
    params: {file: version/version}



